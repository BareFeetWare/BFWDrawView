//
//  SampleStyleKit.m
//  BFWDrawView
//
//  Created by Tom Brodhurst-Hill on 4/11/16.
//  Copyright Â© 2016 BareFeetWare. All rights reserved.
//
//  Generated by PaintCode
//  http://www.paintcodeapp.com
//

#import "SampleStyleKit.h"


@implementation SampleStyleKit

#pragma mark Cache

static UIColor* _translucentBlack = nil;
static UIColor* _buttonHighlightedColor = nil;
static UIColor* _baseLightColor = nil;
static UIColor* _baseColor = nil;
static UIColor* _buttonColor = nil;

static NSShadow* _buttonShadow = nil;
static NSShadow* _buttonShadowHighlighted = nil;

#pragma mark Initialization

+ (void)initialize
{
    // Colors Initialization
    _translucentBlack = [UIColor colorWithRed: 0 green: 0 blue: 0 alpha: 0.5];
    _baseColor = [UIColor colorWithRed: 0.808 green: 0.638 blue: 0.425 alpha: 1];
    CGFloat baseColorRGBA[4];
    [_baseColor getRed: &baseColorRGBA[0] green: &baseColorRGBA[1] blue: &baseColorRGBA[2] alpha: &baseColorRGBA[3]];

    _buttonHighlightedColor = SampleStyleKit.baseColor;
    _baseLightColor = [UIColor colorWithRed: (baseColorRGBA[0] * 0.5 + 0.5) green: (baseColorRGBA[1] * 0.5 + 0.5) blue: (baseColorRGBA[2] * 0.5 + 0.5) alpha: (baseColorRGBA[3] * 0.5 + 0.5)];
    _buttonColor = SampleStyleKit.baseLightColor;

    // Shadows Initialization
    _buttonShadow = [NSShadow shadowWithColor: SampleStyleKit.translucentBlack offset: CGSizeMake(0, 2) blurRadius: 3];
    _buttonShadowHighlighted = [NSShadow shadowWithColor: SampleStyleKit.translucentBlack offset: CGSizeMake(0, 1) blurRadius: 2];

}

#pragma mark Colors

+ (UIColor*)translucentBlack { return _translucentBlack; }
+ (UIColor*)buttonHighlightedColor { return _buttonHighlightedColor; }
+ (UIColor*)baseLightColor { return _baseLightColor; }
+ (UIColor*)baseColor { return _baseColor; }
+ (UIColor*)buttonColor { return _buttonColor; }

#pragma mark Shadows

+ (NSShadow*)buttonShadow { return _buttonShadow; }
+ (NSShadow*)buttonShadowHighlighted { return _buttonShadowHighlighted; }

#pragma mark Drawing Methods

+ (void)drawPacManWithFrame: (CGRect)frame animation: (CGFloat)animation
{
    //// Color Declarations
    UIColor* pacManColor = [UIColor colorWithRed: 1 green: 0.806 blue: 0 alpha: 1];

    //// Variable Declarations
    CGFloat topLip = animation < 0.5 ? 24 * 2 * animation + 0.00001 : 24 - (animation - 0.5) * 2 * 24 + 0.00001;
    CGFloat bottomLip = -topLip;

    //// Oval Drawing
    CGRect ovalRect = CGRectMake(CGRectGetMinX(frame) + floor(frame.size.width * 0.00000 + 0.5), CGRectGetMinY(frame) + floor(frame.size.height * 0.00000 + 0.5), floor(frame.size.width * 1.00000 + 0.5) - floor(frame.size.width * 0.00000 + 0.5), floor(frame.size.height * 1.00000 + 0.5) - floor(frame.size.height * 0.00000 + 0.5));
    UIBezierPath* ovalPath = [UIBezierPath bezierPath];
    [ovalPath addArcWithCenter: CGPointMake(CGRectGetMidX(ovalRect), CGRectGetMidY(ovalRect)) radius: ovalRect.size.width / 2 startAngle: -bottomLip * M_PI/180 endAngle: -topLip * M_PI/180 clockwise: YES];
    [ovalPath addLineToPoint: CGPointMake(CGRectGetMidX(ovalRect), CGRectGetMidY(ovalRect))];
    [ovalPath closePath];

    [pacManColor setFill];
    [ovalPath fill];
}

+ (void)drawBathroomWithFrame: (CGRect)frame
{
    //// General Declarations
    CGContextRef context = UIGraphicsGetCurrentContext();


    //// Shadow Declarations
    NSShadow* bottomThinShadow = [NSShadow shadowWithColor: SampleStyleKit.translucentBlack offset: CGSizeMake(0, 1) blurRadius: 2];
    NSShadow* bottomShadow = [NSShadow shadowWithColor: SampleStyleKit.translucentBlack offset: CGSizeMake(0, 2) blurRadius: 3];
    NSShadow* highlightShadow = [NSShadow shadowWithColor: SampleStyleKit.baseLightColor offset: CGSizeMake(0, -2) blurRadius: 5];


    //// Subframes
    CGRect bathroomGroup = CGRectMake(CGRectGetMinX(frame), CGRectGetMinY(frame), frame.size.width, frame.size.height);


    //// Bathroom Group
    {
        //// Bath Roof and Wall Group
        {
            CGContextSaveGState(context);
            CGContextSetAlpha(context, 0.12);
            CGContextBeginTransparencyLayer(context, NULL);


            //// Bath Wall Group
            {
                //// Rectangle Drawing
                UIBezierPath* rectanglePath = [UIBezierPath bezierPathWithRect: CGRectMake(CGRectGetMinX(bathroomGroup) + floor(bathroomGroup.size.width * 0.00000 + 0.5), CGRectGetMinY(bathroomGroup) + floor(bathroomGroup.size.height * 0.24138 + 0.5), floor(bathroomGroup.size.width * 0.01613 + 0.5) - floor(bathroomGroup.size.width * 0.00000 + 0.5), floor(bathroomGroup.size.height * 0.93103 + 0.5) - floor(bathroomGroup.size.height * 0.24138 + 0.5))];
                [UIColor.whiteColor setFill];
                [rectanglePath fill];


                //// Rectangle 49 Drawing
                UIBezierPath* rectangle49Path = [UIBezierPath bezierPathWithRect: CGRectMake(CGRectGetMinX(bathroomGroup) + floor(bathroomGroup.size.width * 0.19355 + 0.5), CGRectGetMinY(bathroomGroup) + floor(bathroomGroup.size.height * 0.24138 + 0.5), floor(bathroomGroup.size.width * 0.20968 + 0.5) - floor(bathroomGroup.size.width * 0.19355 + 0.5), floor(bathroomGroup.size.height * 0.93103 + 0.5) - floor(bathroomGroup.size.height * 0.24138 + 0.5))];
                [UIColor.whiteColor setFill];
                [rectangle49Path fill];


                //// Rectangle 50 Drawing
                UIBezierPath* rectangle50Path = [UIBezierPath bezierPathWithRect: CGRectMake(CGRectGetMinX(bathroomGroup) + floor(bathroomGroup.size.width * 0.38710 + 0.5), CGRectGetMinY(bathroomGroup) + floor(bathroomGroup.size.height * 0.24138 + 0.5), floor(bathroomGroup.size.width * 0.40323 + 0.5) - floor(bathroomGroup.size.width * 0.38710 + 0.5), floor(bathroomGroup.size.height * 0.93103 + 0.5) - floor(bathroomGroup.size.height * 0.24138 + 0.5))];
                [UIColor.whiteColor setFill];
                [rectangle50Path fill];


                //// Rectangle 51 Drawing
                UIBezierPath* rectangle51Path = [UIBezierPath bezierPathWithRect: CGRectMake(CGRectGetMinX(bathroomGroup) + floor(bathroomGroup.size.width * 0.58065 + 0.5), CGRectGetMinY(bathroomGroup) + floor(bathroomGroup.size.height * 0.24138 + 0.5), floor(bathroomGroup.size.width * 0.59677 + 0.5) - floor(bathroomGroup.size.width * 0.58065 + 0.5), floor(bathroomGroup.size.height * 0.93103 + 0.5) - floor(bathroomGroup.size.height * 0.24138 + 0.5))];
                [UIColor.whiteColor setFill];
                [rectangle51Path fill];


                //// Rectangle 52 Drawing
                UIBezierPath* rectangle52Path = [UIBezierPath bezierPathWithRect: CGRectMake(CGRectGetMinX(bathroomGroup) + floor(bathroomGroup.size.width * 0.77419 + 0.5), CGRectGetMinY(bathroomGroup) + floor(bathroomGroup.size.height * 0.24138 + 0.5), floor(bathroomGroup.size.width * 0.79032 + 0.5) - floor(bathroomGroup.size.width * 0.77419 + 0.5), floor(bathroomGroup.size.height * 0.93103 + 0.5) - floor(bathroomGroup.size.height * 0.24138 + 0.5))];
                [UIColor.whiteColor setFill];
                [rectangle52Path fill];


                //// Rectangle 53 Drawing
                UIBezierPath* rectangle53Path = [UIBezierPath bezierPathWithRect: CGRectMake(CGRectGetMinX(bathroomGroup) + floor(bathroomGroup.size.width * 0.96774 + 0.5), CGRectGetMinY(bathroomGroup) + floor(bathroomGroup.size.height * 0.24138 + 0.5), floor(bathroomGroup.size.width * 0.98387 + 0.5) - floor(bathroomGroup.size.width * 0.96774 + 0.5), floor(bathroomGroup.size.height * 0.93103 + 0.5) - floor(bathroomGroup.size.height * 0.24138 + 0.5))];
                [UIColor.whiteColor setFill];
                [rectangle53Path fill];


                //// Rectangle 54 Drawing
                UIBezierPath* rectangle54Path = [UIBezierPath bezierPath];
                [rectangle54Path moveToPoint: CGPointMake(CGRectGetMinX(bathroomGroup) + 0.19692 * bathroomGroup.size.width, CGRectGetMinY(bathroomGroup) + 0.68731 * bathroomGroup.size.height)];
                [rectangle54Path addLineToPoint: CGPointMake(CGRectGetMinX(bathroomGroup) + 0.20834 * bathroomGroup.size.width, CGRectGetMinY(bathroomGroup) + 0.66296 * bathroomGroup.size.height)];
                [rectangle54Path addLineToPoint: CGPointMake(CGRectGetMinX(bathroomGroup) + 0.01275 * bathroomGroup.size.width, CGRectGetMinY(bathroomGroup) + 0.24372 * bathroomGroup.size.height)];
                [rectangle54Path addLineToPoint: CGPointMake(CGRectGetMinX(bathroomGroup) + 0.00134 * bathroomGroup.size.width, CGRectGetMinY(bathroomGroup) + 0.26808 * bathroomGroup.size.height)];
                [rectangle54Path addLineToPoint: CGPointMake(CGRectGetMinX(bathroomGroup) + 0.19692 * bathroomGroup.size.width, CGRectGetMinY(bathroomGroup) + 0.68731 * bathroomGroup.size.height)];
                [rectangle54Path closePath];
                [UIColor.whiteColor setFill];
                [rectangle54Path fill];


                //// Rectangle 55 Drawing
                UIBezierPath* rectangle55Path = [UIBezierPath bezierPath];
                [rectangle55Path moveToPoint: CGPointMake(CGRectGetMinX(bathroomGroup) + 0.01275 * bathroomGroup.size.width, CGRectGetMinY(bathroomGroup) + 0.68731 * bathroomGroup.size.height)];
                [rectangle55Path addLineToPoint: CGPointMake(CGRectGetMinX(bathroomGroup) + 0.00134 * bathroomGroup.size.width, CGRectGetMinY(bathroomGroup) + 0.66296 * bathroomGroup.size.height)];
                [rectangle55Path addLineToPoint: CGPointMake(CGRectGetMinX(bathroomGroup) + 0.19692 * bathroomGroup.size.width, CGRectGetMinY(bathroomGroup) + 0.24372 * bathroomGroup.size.height)];
                [rectangle55Path addLineToPoint: CGPointMake(CGRectGetMinX(bathroomGroup) + 0.20834 * bathroomGroup.size.width, CGRectGetMinY(bathroomGroup) + 0.26808 * bathroomGroup.size.height)];
                [rectangle55Path addLineToPoint: CGPointMake(CGRectGetMinX(bathroomGroup) + 0.01275 * bathroomGroup.size.width, CGRectGetMinY(bathroomGroup) + 0.68731 * bathroomGroup.size.height)];
                [rectangle55Path closePath];
                [UIColor.whiteColor setFill];
                [rectangle55Path fill];


                //// Rectangle 56 Drawing
                UIBezierPath* rectangle56Path = [UIBezierPath bezierPath];
                [rectangle56Path moveToPoint: CGPointMake(CGRectGetMinX(bathroomGroup) + 0.39047 * bathroomGroup.size.width, CGRectGetMinY(bathroomGroup) + 0.68731 * bathroomGroup.size.height)];
                [rectangle56Path addLineToPoint: CGPointMake(CGRectGetMinX(bathroomGroup) + 0.40189 * bathroomGroup.size.width, CGRectGetMinY(bathroomGroup) + 0.66296 * bathroomGroup.size.height)];
                [rectangle56Path addLineToPoint: CGPointMake(CGRectGetMinX(bathroomGroup) + 0.20630 * bathroomGroup.size.width, CGRectGetMinY(bathroomGroup) + 0.24372 * bathroomGroup.size.height)];
                [rectangle56Path addLineToPoint: CGPointMake(CGRectGetMinX(bathroomGroup) + 0.19488 * bathroomGroup.size.width, CGRectGetMinY(bathroomGroup) + 0.26808 * bathroomGroup.size.height)];
                [rectangle56Path addLineToPoint: CGPointMake(CGRectGetMinX(bathroomGroup) + 0.39047 * bathroomGroup.size.width, CGRectGetMinY(bathroomGroup) + 0.68731 * bathroomGroup.size.height)];
                [rectangle56Path closePath];
                [UIColor.whiteColor setFill];
                [rectangle56Path fill];


                //// Rectangle 57 Drawing
                UIBezierPath* rectangle57Path = [UIBezierPath bezierPath];
                [rectangle57Path moveToPoint: CGPointMake(CGRectGetMinX(bathroomGroup) + 0.20630 * bathroomGroup.size.width, CGRectGetMinY(bathroomGroup) + 0.68731 * bathroomGroup.size.height)];
                [rectangle57Path addLineToPoint: CGPointMake(CGRectGetMinX(bathroomGroup) + 0.19488 * bathroomGroup.size.width, CGRectGetMinY(bathroomGroup) + 0.66296 * bathroomGroup.size.height)];
                [rectangle57Path addLineToPoint: CGPointMake(CGRectGetMinX(bathroomGroup) + 0.39047 * bathroomGroup.size.width, CGRectGetMinY(bathroomGroup) + 0.24372 * bathroomGroup.size.height)];
                [rectangle57Path addLineToPoint: CGPointMake(CGRectGetMinX(bathroomGroup) + 0.40189 * bathroomGroup.size.width, CGRectGetMinY(bathroomGroup) + 0.26808 * bathroomGroup.size.height)];
                [rectangle57Path addLineToPoint: CGPointMake(CGRectGetMinX(bathroomGroup) + 0.20630 * bathroomGroup.size.width, CGRectGetMinY(bathroomGroup) + 0.68731 * bathroomGroup.size.height)];
                [rectangle57Path closePath];
                [UIColor.whiteColor setFill];
                [rectangle57Path fill];


                //// Rectangle 58 Drawing
                UIBezierPath* rectangle58Path = [UIBezierPath bezierPath];
                [rectangle58Path moveToPoint: CGPointMake(CGRectGetMinX(bathroomGroup) + 0.58402 * bathroomGroup.size.width, CGRectGetMinY(bathroomGroup) + 0.68731 * bathroomGroup.size.height)];
                [rectangle58Path addLineToPoint: CGPointMake(CGRectGetMinX(bathroomGroup) + 0.59544 * bathroomGroup.size.width, CGRectGetMinY(bathroomGroup) + 0.66296 * bathroomGroup.size.height)];
                [rectangle58Path addLineToPoint: CGPointMake(CGRectGetMinX(bathroomGroup) + 0.39985 * bathroomGroup.size.width, CGRectGetMinY(bathroomGroup) + 0.24372 * bathroomGroup.size.height)];
                [rectangle58Path addLineToPoint: CGPointMake(CGRectGetMinX(bathroomGroup) + 0.38843 * bathroomGroup.size.width, CGRectGetMinY(bathroomGroup) + 0.26808 * bathroomGroup.size.height)];
                [rectangle58Path addLineToPoint: CGPointMake(CGRectGetMinX(bathroomGroup) + 0.58402 * bathroomGroup.size.width, CGRectGetMinY(bathroomGroup) + 0.68731 * bathroomGroup.size.height)];
                [rectangle58Path closePath];
                [UIColor.whiteColor setFill];
                [rectangle58Path fill];


                //// Rectangle 59 Drawing
                UIBezierPath* rectangle59Path = [UIBezierPath bezierPath];
                [rectangle59Path moveToPoint: CGPointMake(CGRectGetMinX(bathroomGroup) + 0.39985 * bathroomGroup.size.width, CGRectGetMinY(bathroomGroup) + 0.68731 * bathroomGroup.size.height)];
                [rectangle59Path addLineToPoint: CGPointMake(CGRectGetMinX(bathroomGroup) + 0.38843 * bathroomGroup.size.width, CGRectGetMinY(bathroomGroup) + 0.66296 * bathroomGroup.size.height)];
                [rectangle59Path addLineToPoint: CGPointMake(CGRectGetMinX(bathroomGroup) + 0.58402 * bathroomGroup.size.width, CGRectGetMinY(bathroomGroup) + 0.24372 * bathroomGroup.size.height)];
                [rectangle59Path addLineToPoint: CGPointMake(CGRectGetMinX(bathroomGroup) + 0.59544 * bathroomGroup.size.width, CGRectGetMinY(bathroomGroup) + 0.26808 * bathroomGroup.size.height)];
                [rectangle59Path addLineToPoint: CGPointMake(CGRectGetMinX(bathroomGroup) + 0.39985 * bathroomGroup.size.width, CGRectGetMinY(bathroomGroup) + 0.68731 * bathroomGroup.size.height)];
                [rectangle59Path closePath];
                [UIColor.whiteColor setFill];
                [rectangle59Path fill];


                //// Rectangle 60 Drawing
                UIBezierPath* rectangle60Path = [UIBezierPath bezierPath];
                [rectangle60Path moveToPoint: CGPointMake(CGRectGetMinX(bathroomGroup) + 0.77757 * bathroomGroup.size.width, CGRectGetMinY(bathroomGroup) + 0.68731 * bathroomGroup.size.height)];
                [rectangle60Path addLineToPoint: CGPointMake(CGRectGetMinX(bathroomGroup) + 0.78899 * bathroomGroup.size.width, CGRectGetMinY(bathroomGroup) + 0.66296 * bathroomGroup.size.height)];
                [rectangle60Path addLineToPoint: CGPointMake(CGRectGetMinX(bathroomGroup) + 0.59340 * bathroomGroup.size.width, CGRectGetMinY(bathroomGroup) + 0.24372 * bathroomGroup.size.height)];
                [rectangle60Path addLineToPoint: CGPointMake(CGRectGetMinX(bathroomGroup) + 0.58198 * bathroomGroup.size.width, CGRectGetMinY(bathroomGroup) + 0.26808 * bathroomGroup.size.height)];
                [rectangle60Path addLineToPoint: CGPointMake(CGRectGetMinX(bathroomGroup) + 0.77757 * bathroomGroup.size.width, CGRectGetMinY(bathroomGroup) + 0.68731 * bathroomGroup.size.height)];
                [rectangle60Path closePath];
                [UIColor.whiteColor setFill];
                [rectangle60Path fill];


                //// Rectangle 61 Drawing
                UIBezierPath* rectangle61Path = [UIBezierPath bezierPath];
                [rectangle61Path moveToPoint: CGPointMake(CGRectGetMinX(bathroomGroup) + 0.59340 * bathroomGroup.size.width, CGRectGetMinY(bathroomGroup) + 0.68731 * bathroomGroup.size.height)];
                [rectangle61Path addLineToPoint: CGPointMake(CGRectGetMinX(bathroomGroup) + 0.58198 * bathroomGroup.size.width, CGRectGetMinY(bathroomGroup) + 0.66296 * bathroomGroup.size.height)];
                [rectangle61Path addLineToPoint: CGPointMake(CGRectGetMinX(bathroomGroup) + 0.77757 * bathroomGroup.size.width, CGRectGetMinY(bathroomGroup) + 0.24372 * bathroomGroup.size.height)];
                [rectangle61Path addLineToPoint: CGPointMake(CGRectGetMinX(bathroomGroup) + 0.78899 * bathroomGroup.size.width, CGRectGetMinY(bathroomGroup) + 0.26808 * bathroomGroup.size.height)];
                [rectangle61Path addLineToPoint: CGPointMake(CGRectGetMinX(bathroomGroup) + 0.59340 * bathroomGroup.size.width, CGRectGetMinY(bathroomGroup) + 0.68731 * bathroomGroup.size.height)];
                [rectangle61Path closePath];
                [UIColor.whiteColor setFill];
                [rectangle61Path fill];


                //// Rectangle 62 Drawing
                UIBezierPath* rectangle62Path = [UIBezierPath bezierPath];
                [rectangle62Path moveToPoint: CGPointMake(CGRectGetMinX(bathroomGroup) + 0.97112 * bathroomGroup.size.width, CGRectGetMinY(bathroomGroup) + 0.68731 * bathroomGroup.size.height)];
                [rectangle62Path addLineToPoint: CGPointMake(CGRectGetMinX(bathroomGroup) + 0.98253 * bathroomGroup.size.width, CGRectGetMinY(bathroomGroup) + 0.66296 * bathroomGroup.size.height)];
                [rectangle62Path addLineToPoint: CGPointMake(CGRectGetMinX(bathroomGroup) + 0.78695 * bathroomGroup.size.width, CGRectGetMinY(bathroomGroup) + 0.24372 * bathroomGroup.size.height)];
                [rectangle62Path addLineToPoint: CGPointMake(CGRectGetMinX(bathroomGroup) + 0.77553 * bathroomGroup.size.width, CGRectGetMinY(bathroomGroup) + 0.26808 * bathroomGroup.size.height)];
                [rectangle62Path addLineToPoint: CGPointMake(CGRectGetMinX(bathroomGroup) + 0.97112 * bathroomGroup.size.width, CGRectGetMinY(bathroomGroup) + 0.68731 * bathroomGroup.size.height)];
                [rectangle62Path closePath];
                [UIColor.whiteColor setFill];
                [rectangle62Path fill];


                //// Rectangle 63 Drawing
                UIBezierPath* rectangle63Path = [UIBezierPath bezierPath];
                [rectangle63Path moveToPoint: CGPointMake(CGRectGetMinX(bathroomGroup) + 0.78695 * bathroomGroup.size.width, CGRectGetMinY(bathroomGroup) + 0.68731 * bathroomGroup.size.height)];
                [rectangle63Path addLineToPoint: CGPointMake(CGRectGetMinX(bathroomGroup) + 0.77553 * bathroomGroup.size.width, CGRectGetMinY(bathroomGroup) + 0.66296 * bathroomGroup.size.height)];
                [rectangle63Path addLineToPoint: CGPointMake(CGRectGetMinX(bathroomGroup) + 0.97112 * bathroomGroup.size.width, CGRectGetMinY(bathroomGroup) + 0.24372 * bathroomGroup.size.height)];
                [rectangle63Path addLineToPoint: CGPointMake(CGRectGetMinX(bathroomGroup) + 0.98253 * bathroomGroup.size.width, CGRectGetMinY(bathroomGroup) + 0.26808 * bathroomGroup.size.height)];
                [rectangle63Path addLineToPoint: CGPointMake(CGRectGetMinX(bathroomGroup) + 0.78695 * bathroomGroup.size.width, CGRectGetMinY(bathroomGroup) + 0.68731 * bathroomGroup.size.height)];
                [rectangle63Path closePath];
                [UIColor.whiteColor setFill];
                [rectangle63Path fill];
            }


            //// Bath Roof Group
            {
                //// Rectangle 2 Drawing
                UIBezierPath* rectangle2Path = [UIBezierPath bezierPathWithRect: CGRectMake(CGRectGetMinX(bathroomGroup) + floor(bathroomGroup.size.width * 0.03226 + 0.5), CGRectGetMinY(bathroomGroup) + floor(bathroomGroup.size.height * 0.06897 + 0.5), floor(bathroomGroup.size.width * 0.06452 + 0.5) - floor(bathroomGroup.size.width * 0.03226 + 0.5), floor(bathroomGroup.size.height * 0.13793 + 0.5) - floor(bathroomGroup.size.height * 0.06897 + 0.5))];
                [UIColor.whiteColor setFill];
                [rectangle2Path fill];


                //// Rectangle 3 Drawing
                UIBezierPath* rectangle3Path = [UIBezierPath bezierPathWithRect: CGRectMake(CGRectGetMinX(bathroomGroup) + floor(bathroomGroup.size.width * 0.09677 + 0.5), CGRectGetMinY(bathroomGroup) + floor(bathroomGroup.size.height * 0.06897 + 0.5), floor(bathroomGroup.size.width * 0.12903 + 0.5) - floor(bathroomGroup.size.width * 0.09677 + 0.5), floor(bathroomGroup.size.height * 0.13793 + 0.5) - floor(bathroomGroup.size.height * 0.06897 + 0.5))];
                [UIColor.whiteColor setFill];
                [rectangle3Path fill];


                //// Rectangle 4 Drawing
                UIBezierPath* rectangle4Path = [UIBezierPath bezierPathWithRect: CGRectMake(CGRectGetMinX(bathroomGroup) + floor(bathroomGroup.size.width * 0.16129 + 0.5), CGRectGetMinY(bathroomGroup) + floor(bathroomGroup.size.height * 0.06897 + 0.5), floor(bathroomGroup.size.width * 0.19355 + 0.5) - floor(bathroomGroup.size.width * 0.16129 + 0.5), floor(bathroomGroup.size.height * 0.13793 + 0.5) - floor(bathroomGroup.size.height * 0.06897 + 0.5))];
                [UIColor.whiteColor setFill];
                [rectangle4Path fill];


                //// Rectangle 5 Drawing
                UIBezierPath* rectangle5Path = [UIBezierPath bezierPathWithRect: CGRectMake(CGRectGetMinX(bathroomGroup) + floor(bathroomGroup.size.width * 0.22581 + 0.5), CGRectGetMinY(bathroomGroup) + floor(bathroomGroup.size.height * 0.06897 + 0.5), floor(bathroomGroup.size.width * 0.25806 + 0.5) - floor(bathroomGroup.size.width * 0.22581 + 0.5), floor(bathroomGroup.size.height * 0.13793 + 0.5) - floor(bathroomGroup.size.height * 0.06897 + 0.5))];
                [UIColor.whiteColor setFill];
                [rectangle5Path fill];


                //// Rectangle 6 Drawing
                UIBezierPath* rectangle6Path = [UIBezierPath bezierPathWithRect: CGRectMake(CGRectGetMinX(bathroomGroup) + floor(bathroomGroup.size.width * 0.29032 + 0.5), CGRectGetMinY(bathroomGroup) + floor(bathroomGroup.size.height * 0.06897 + 0.5), floor(bathroomGroup.size.width * 0.32258 + 0.5) - floor(bathroomGroup.size.width * 0.29032 + 0.5), floor(bathroomGroup.size.height * 0.13793 + 0.5) - floor(bathroomGroup.size.height * 0.06897 + 0.5))];
                [UIColor.whiteColor setFill];
                [rectangle6Path fill];


                //// Rectangle 7 Drawing
                UIBezierPath* rectangle7Path = [UIBezierPath bezierPathWithRect: CGRectMake(CGRectGetMinX(bathroomGroup) + floor(bathroomGroup.size.width * 0.35484 + 0.5), CGRectGetMinY(bathroomGroup) + floor(bathroomGroup.size.height * 0.06897 + 0.5), floor(bathroomGroup.size.width * 0.38710 + 0.5) - floor(bathroomGroup.size.width * 0.35484 + 0.5), floor(bathroomGroup.size.height * 0.13793 + 0.5) - floor(bathroomGroup.size.height * 0.06897 + 0.5))];
                [UIColor.whiteColor setFill];
                [rectangle7Path fill];


                //// Rectangle 8 Drawing
                UIBezierPath* rectangle8Path = [UIBezierPath bezierPathWithRect: CGRectMake(CGRectGetMinX(bathroomGroup) + floor(bathroomGroup.size.width * 0.41935 + 0.5), CGRectGetMinY(bathroomGroup) + floor(bathroomGroup.size.height * 0.06897 + 0.5), floor(bathroomGroup.size.width * 0.45161 + 0.5) - floor(bathroomGroup.size.width * 0.41935 + 0.5), floor(bathroomGroup.size.height * 0.13793 + 0.5) - floor(bathroomGroup.size.height * 0.06897 + 0.5))];
                [UIColor.whiteColor setFill];
                [rectangle8Path fill];


                //// Rectangle 9 Drawing
                UIBezierPath* rectangle9Path = [UIBezierPath bezierPathWithRect: CGRectMake(CGRectGetMinX(bathroomGroup) + floor(bathroomGroup.size.width * 0.48387 + 0.5), CGRectGetMinY(bathroomGroup) + floor(bathroomGroup.size.height * 0.06897 + 0.5), floor(bathroomGroup.size.width * 0.51613 + 0.5) - floor(bathroomGroup.size.width * 0.48387 + 0.5), floor(bathroomGroup.size.height * 0.13793 + 0.5) - floor(bathroomGroup.size.height * 0.06897 + 0.5))];
                [UIColor.whiteColor setFill];
                [rectangle9Path fill];


                //// Rectangle 10 Drawing
                UIBezierPath* rectangle10Path = [UIBezierPath bezierPathWithRect: CGRectMake(CGRectGetMinX(bathroomGroup) + floor(bathroomGroup.size.width * 0.54839 + 0.5), CGRectGetMinY(bathroomGroup) + floor(bathroomGroup.size.height * 0.06897 + 0.5), floor(bathroomGroup.size.width * 0.58065 + 0.5) - floor(bathroomGroup.size.width * 0.54839 + 0.5), floor(bathroomGroup.size.height * 0.13793 + 0.5) - floor(bathroomGroup.size.height * 0.06897 + 0.5))];
                [UIColor.whiteColor setFill];
                [rectangle10Path fill];


                //// Rectangle 11 Drawing
                UIBezierPath* rectangle11Path = [UIBezierPath bezierPathWithRect: CGRectMake(CGRectGetMinX(bathroomGroup) + floor(bathroomGroup.size.width * 0.61290 + 0.5), CGRectGetMinY(bathroomGroup) + floor(bathroomGroup.size.height * 0.06897 + 0.5), floor(bathroomGroup.size.width * 0.64516 + 0.5) - floor(bathroomGroup.size.width * 0.61290 + 0.5), floor(bathroomGroup.size.height * 0.13793 + 0.5) - floor(bathroomGroup.size.height * 0.06897 + 0.5))];
                [UIColor.whiteColor setFill];
                [rectangle11Path fill];


                //// Rectangle 12 Drawing
                UIBezierPath* rectangle12Path = [UIBezierPath bezierPathWithRect: CGRectMake(CGRectGetMinX(bathroomGroup) + floor(bathroomGroup.size.width * 0.67742 + 0.5), CGRectGetMinY(bathroomGroup) + floor(bathroomGroup.size.height * 0.06897 + 0.5), floor(bathroomGroup.size.width * 0.70968 + 0.5) - floor(bathroomGroup.size.width * 0.67742 + 0.5), floor(bathroomGroup.size.height * 0.13793 + 0.5) - floor(bathroomGroup.size.height * 0.06897 + 0.5))];
                [UIColor.whiteColor setFill];
                [rectangle12Path fill];


                //// Rectangle 13 Drawing
                UIBezierPath* rectangle13Path = [UIBezierPath bezierPathWithRect: CGRectMake(CGRectGetMinX(bathroomGroup) + floor(bathroomGroup.size.width * 0.74194 + 0.5), CGRectGetMinY(bathroomGroup) + floor(bathroomGroup.size.height * 0.06897 + 0.5), floor(bathroomGroup.size.width * 0.77419 + 0.5) - floor(bathroomGroup.size.width * 0.74194 + 0.5), floor(bathroomGroup.size.height * 0.13793 + 0.5) - floor(bathroomGroup.size.height * 0.06897 + 0.5))];
                [UIColor.whiteColor setFill];
                [rectangle13Path fill];


                //// Rectangle 14 Drawing
                UIBezierPath* rectangle14Path = [UIBezierPath bezierPathWithRect: CGRectMake(CGRectGetMinX(bathroomGroup) + floor(bathroomGroup.size.width * 0.80645 + 0.5), CGRectGetMinY(bathroomGroup) + floor(bathroomGroup.size.height * 0.06897 + 0.5), floor(bathroomGroup.size.width * 0.83871 + 0.5) - floor(bathroomGroup.size.width * 0.80645 + 0.5), floor(bathroomGroup.size.height * 0.13793 + 0.5) - floor(bathroomGroup.size.height * 0.06897 + 0.5))];
                [UIColor.whiteColor setFill];
                [rectangle14Path fill];


                //// Rectangle 15 Drawing
                UIBezierPath* rectangle15Path = [UIBezierPath bezierPathWithRect: CGRectMake(CGRectGetMinX(bathroomGroup) + floor(bathroomGroup.size.width * 0.87097 + 0.5), CGRectGetMinY(bathroomGroup) + floor(bathroomGroup.size.height * 0.06897 + 0.5), floor(bathroomGroup.size.width * 0.90323 + 0.5) - floor(bathroomGroup.size.width * 0.87097 + 0.5), floor(bathroomGroup.size.height * 0.13793 + 0.5) - floor(bathroomGroup.size.height * 0.06897 + 0.5))];
                [UIColor.whiteColor setFill];
                [rectangle15Path fill];


                //// Rectangle 16 Drawing
                UIBezierPath* rectangle16Path = [UIBezierPath bezierPathWithRect: CGRectMake(CGRectGetMinX(bathroomGroup) + floor(bathroomGroup.size.width * 0.93548 + 0.5), CGRectGetMinY(bathroomGroup) + floor(bathroomGroup.size.height * 0.06897 + 0.5), floor(bathroomGroup.size.width * 0.96774 + 0.5) - floor(bathroomGroup.size.width * 0.93548 + 0.5), floor(bathroomGroup.size.height * 0.13793 + 0.5) - floor(bathroomGroup.size.height * 0.06897 + 0.5))];
                [UIColor.whiteColor setFill];
                [rectangle16Path fill];


                //// Rectangle 17 Drawing
                UIBezierPath* rectangle17Path = [UIBezierPath bezierPathWithRect: CGRectMake(CGRectGetMinX(bathroomGroup) + floor(bathroomGroup.size.width * 0.06452 + 0.5), CGRectGetMinY(bathroomGroup) + floor(bathroomGroup.size.height * 0.13793 + 0.5), floor(bathroomGroup.size.width * 0.09677 + 0.5) - floor(bathroomGroup.size.width * 0.06452 + 0.5), floor(bathroomGroup.size.height * 0.20690 + 0.5) - floor(bathroomGroup.size.height * 0.13793 + 0.5))];
                [UIColor.whiteColor setFill];
                [rectangle17Path fill];


                //// Rectangle 18 Drawing
                UIBezierPath* rectangle18Path = [UIBezierPath bezierPathWithRect: CGRectMake(CGRectGetMinX(bathroomGroup) + floor(bathroomGroup.size.width * 0.12903 + 0.5), CGRectGetMinY(bathroomGroup) + floor(bathroomGroup.size.height * 0.13793 + 0.5), floor(bathroomGroup.size.width * 0.16129 + 0.5) - floor(bathroomGroup.size.width * 0.12903 + 0.5), floor(bathroomGroup.size.height * 0.20690 + 0.5) - floor(bathroomGroup.size.height * 0.13793 + 0.5))];
                [UIColor.whiteColor setFill];
                [rectangle18Path fill];


                //// Rectangle 19 Drawing
                UIBezierPath* rectangle19Path = [UIBezierPath bezierPathWithRect: CGRectMake(CGRectGetMinX(bathroomGroup) + floor(bathroomGroup.size.width * 0.19355 + 0.5), CGRectGetMinY(bathroomGroup) + floor(bathroomGroup.size.height * 0.13793 + 0.5), floor(bathroomGroup.size.width * 0.22581 + 0.5) - floor(bathroomGroup.size.width * 0.19355 + 0.5), floor(bathroomGroup.size.height * 0.20690 + 0.5) - floor(bathroomGroup.size.height * 0.13793 + 0.5))];
                [UIColor.whiteColor setFill];
                [rectangle19Path fill];


                //// Rectangle 20 Drawing
                UIBezierPath* rectangle20Path = [UIBezierPath bezierPathWithRect: CGRectMake(CGRectGetMinX(bathroomGroup) + floor(bathroomGroup.size.width * 0.25806 + 0.5), CGRectGetMinY(bathroomGroup) + floor(bathroomGroup.size.height * 0.13793 + 0.5), floor(bathroomGroup.size.width * 0.29032 + 0.5) - floor(bathroomGroup.size.width * 0.25806 + 0.5), floor(bathroomGroup.size.height * 0.20690 + 0.5) - floor(bathroomGroup.size.height * 0.13793 + 0.5))];
                [UIColor.whiteColor setFill];
                [rectangle20Path fill];


                //// Rectangle 21 Drawing
                UIBezierPath* rectangle21Path = [UIBezierPath bezierPathWithRect: CGRectMake(CGRectGetMinX(bathroomGroup) + floor(bathroomGroup.size.width * 0.32258 + 0.5), CGRectGetMinY(bathroomGroup) + floor(bathroomGroup.size.height * 0.13793 + 0.5), floor(bathroomGroup.size.width * 0.35484 + 0.5) - floor(bathroomGroup.size.width * 0.32258 + 0.5), floor(bathroomGroup.size.height * 0.20690 + 0.5) - floor(bathroomGroup.size.height * 0.13793 + 0.5))];
                [UIColor.whiteColor setFill];
                [rectangle21Path fill];


                //// Rectangle 22 Drawing
                UIBezierPath* rectangle22Path = [UIBezierPath bezierPathWithRect: CGRectMake(CGRectGetMinX(bathroomGroup) + floor(bathroomGroup.size.width * 0.38710 + 0.5), CGRectGetMinY(bathroomGroup) + floor(bathroomGroup.size.height * 0.13793 + 0.5), floor(bathroomGroup.size.width * 0.41935 + 0.5) - floor(bathroomGroup.size.width * 0.38710 + 0.5), floor(bathroomGroup.size.height * 0.20690 + 0.5) - floor(bathroomGroup.size.height * 0.13793 + 0.5))];
                [UIColor.whiteColor setFill];
                [rectangle22Path fill];


                //// Rectangle 23 Drawing
                UIBezierPath* rectangle23Path = [UIBezierPath bezierPathWithRect: CGRectMake(CGRectGetMinX(bathroomGroup) + floor(bathroomGroup.size.width * 0.45161 + 0.5), CGRectGetMinY(bathroomGroup) + floor(bathroomGroup.size.height * 0.13793 + 0.5), floor(bathroomGroup.size.width * 0.48387 + 0.5) - floor(bathroomGroup.size.width * 0.45161 + 0.5), floor(bathroomGroup.size.height * 0.20690 + 0.5) - floor(bathroomGroup.size.height * 0.13793 + 0.5))];
                [UIColor.whiteColor setFill];
                [rectangle23Path fill];


                //// Rectangle 24 Drawing
                UIBezierPath* rectangle24Path = [UIBezierPath bezierPathWithRect: CGRectMake(CGRectGetMinX(bathroomGroup) + floor(bathroomGroup.size.width * 0.51613 + 0.5), CGRectGetMinY(bathroomGroup) + floor(bathroomGroup.size.height * 0.13793 + 0.5), floor(bathroomGroup.size.width * 0.54839 + 0.5) - floor(bathroomGroup.size.width * 0.51613 + 0.5), floor(bathroomGroup.size.height * 0.20690 + 0.5) - floor(bathroomGroup.size.height * 0.13793 + 0.5))];
                [UIColor.whiteColor setFill];
                [rectangle24Path fill];


                //// Rectangle 25 Drawing
                UIBezierPath* rectangle25Path = [UIBezierPath bezierPathWithRect: CGRectMake(CGRectGetMinX(bathroomGroup) + floor(bathroomGroup.size.width * 0.58065 + 0.5), CGRectGetMinY(bathroomGroup) + floor(bathroomGroup.size.height * 0.13793 + 0.5), floor(bathroomGroup.size.width * 0.61290 + 0.5) - floor(bathroomGroup.size.width * 0.58065 + 0.5), floor(bathroomGroup.size.height * 0.20690 + 0.5) - floor(bathroomGroup.size.height * 0.13793 + 0.5))];
                [UIColor.whiteColor setFill];
                [rectangle25Path fill];


                //// Rectangle 26 Drawing
                UIBezierPath* rectangle26Path = [UIBezierPath bezierPathWithRect: CGRectMake(CGRectGetMinX(bathroomGroup) + floor(bathroomGroup.size.width * 0.64516 + 0.5), CGRectGetMinY(bathroomGroup) + floor(bathroomGroup.size.height * 0.13793 + 0.5), floor(bathroomGroup.size.width * 0.67742 + 0.5) - floor(bathroomGroup.size.width * 0.64516 + 0.5), floor(bathroomGroup.size.height * 0.20690 + 0.5) - floor(bathroomGroup.size.height * 0.13793 + 0.5))];
                [UIColor.whiteColor setFill];
                [rectangle26Path fill];


                //// Rectangle 27 Drawing
                UIBezierPath* rectangle27Path = [UIBezierPath bezierPathWithRect: CGRectMake(CGRectGetMinX(bathroomGroup) + floor(bathroomGroup.size.width * 0.70968 + 0.5), CGRectGetMinY(bathroomGroup) + floor(bathroomGroup.size.height * 0.13793 + 0.5), floor(bathroomGroup.size.width * 0.74194 + 0.5) - floor(bathroomGroup.size.width * 0.70968 + 0.5), floor(bathroomGroup.size.height * 0.20690 + 0.5) - floor(bathroomGroup.size.height * 0.13793 + 0.5))];
                [UIColor.whiteColor setFill];
                [rectangle27Path fill];


                //// Rectangle 28 Drawing
                UIBezierPath* rectangle28Path = [UIBezierPath bezierPathWithRect: CGRectMake(CGRectGetMinX(bathroomGroup) + floor(bathroomGroup.size.width * 0.77419 + 0.5), CGRectGetMinY(bathroomGroup) + floor(bathroomGroup.size.height * 0.13793 + 0.5), floor(bathroomGroup.size.width * 0.80645 + 0.5) - floor(bathroomGroup.size.width * 0.77419 + 0.5), floor(bathroomGroup.size.height * 0.20690 + 0.5) - floor(bathroomGroup.size.height * 0.13793 + 0.5))];
                [UIColor.whiteColor setFill];
                [rectangle28Path fill];


                //// Rectangle 29 Drawing
                UIBezierPath* rectangle29Path = [UIBezierPath bezierPathWithRect: CGRectMake(CGRectGetMinX(bathroomGroup) + floor(bathroomGroup.size.width * 0.83871 + 0.5), CGRectGetMinY(bathroomGroup) + floor(bathroomGroup.size.height * 0.13793 + 0.5), floor(bathroomGroup.size.width * 0.87097 + 0.5) - floor(bathroomGroup.size.width * 0.83871 + 0.5), floor(bathroomGroup.size.height * 0.20690 + 0.5) - floor(bathroomGroup.size.height * 0.13793 + 0.5))];
                [UIColor.whiteColor setFill];
                [rectangle29Path fill];


                //// Rectangle 30 Drawing
                UIBezierPath* rectangle30Path = [UIBezierPath bezierPathWithRect: CGRectMake(CGRectGetMinX(bathroomGroup) + floor(bathroomGroup.size.width * 0.90323 + 0.5), CGRectGetMinY(bathroomGroup) + floor(bathroomGroup.size.height * 0.13793 + 0.5), floor(bathroomGroup.size.width * 0.93548 + 0.5) - floor(bathroomGroup.size.width * 0.90323 + 0.5), floor(bathroomGroup.size.height * 0.20690 + 0.5) - floor(bathroomGroup.size.height * 0.13793 + 0.5))];
                [UIColor.whiteColor setFill];
                [rectangle30Path fill];


                //// Rectangle 31 Drawing
                UIBezierPath* rectangle31Path = [UIBezierPath bezierPathWithRect: CGRectMake(CGRectGetMinX(bathroomGroup) + floor(bathroomGroup.size.width * 0.96774 + 0.5), CGRectGetMinY(bathroomGroup) + floor(bathroomGroup.size.height * 0.13793 + 0.5), floor(bathroomGroup.size.width * 1.00000 + 0.5) - floor(bathroomGroup.size.width * 0.96774 + 0.5), floor(bathroomGroup.size.height * 0.20690 + 0.5) - floor(bathroomGroup.size.height * 0.13793 + 0.5))];
                [UIColor.whiteColor setFill];
                [rectangle31Path fill];


                //// Rectangle 32 Drawing
                UIBezierPath* rectangle32Path = [UIBezierPath bezierPathWithRect: CGRectMake(CGRectGetMinX(bathroomGroup) + floor(bathroomGroup.size.width * 0.06452 + 0.5), CGRectGetMinY(bathroomGroup) + floor(bathroomGroup.size.height * 0.00000 + 0.5), floor(bathroomGroup.size.width * 0.09677 + 0.5) - floor(bathroomGroup.size.width * 0.06452 + 0.5), floor(bathroomGroup.size.height * 0.06897 + 0.5) - floor(bathroomGroup.size.height * 0.00000 + 0.5))];
                [UIColor.whiteColor setFill];
                [rectangle32Path fill];


                //// Rectangle 33 Drawing
                UIBezierPath* rectangle33Path = [UIBezierPath bezierPathWithRect: CGRectMake(CGRectGetMinX(bathroomGroup) + floor(bathroomGroup.size.width * 0.12903 + 0.5), CGRectGetMinY(bathroomGroup) + floor(bathroomGroup.size.height * 0.00000 + 0.5), floor(bathroomGroup.size.width * 0.16129 + 0.5) - floor(bathroomGroup.size.width * 0.12903 + 0.5), floor(bathroomGroup.size.height * 0.06897 + 0.5) - floor(bathroomGroup.size.height * 0.00000 + 0.5))];
                [UIColor.whiteColor setFill];
                [rectangle33Path fill];


                //// Rectangle 34 Drawing
                UIBezierPath* rectangle34Path = [UIBezierPath bezierPathWithRect: CGRectMake(CGRectGetMinX(bathroomGroup) + floor(bathroomGroup.size.width * 0.19355 + 0.5), CGRectGetMinY(bathroomGroup) + floor(bathroomGroup.size.height * 0.00000 + 0.5), floor(bathroomGroup.size.width * 0.22581 + 0.5) - floor(bathroomGroup.size.width * 0.19355 + 0.5), floor(bathroomGroup.size.height * 0.06897 + 0.5) - floor(bathroomGroup.size.height * 0.00000 + 0.5))];
                [UIColor.whiteColor setFill];
                [rectangle34Path fill];


                //// Rectangle 35 Drawing
                UIBezierPath* rectangle35Path = [UIBezierPath bezierPathWithRect: CGRectMake(CGRectGetMinX(bathroomGroup) + floor(bathroomGroup.size.width * 0.25806 + 0.5), CGRectGetMinY(bathroomGroup) + floor(bathroomGroup.size.height * 0.00000 + 0.5), floor(bathroomGroup.size.width * 0.29032 + 0.5) - floor(bathroomGroup.size.width * 0.25806 + 0.5), floor(bathroomGroup.size.height * 0.06897 + 0.5) - floor(bathroomGroup.size.height * 0.00000 + 0.5))];
                [UIColor.whiteColor setFill];
                [rectangle35Path fill];


                //// Rectangle 36 Drawing
                UIBezierPath* rectangle36Path = [UIBezierPath bezierPathWithRect: CGRectMake(CGRectGetMinX(bathroomGroup) + floor(bathroomGroup.size.width * 0.32258 + 0.5), CGRectGetMinY(bathroomGroup) + floor(bathroomGroup.size.height * 0.00000 + 0.5), floor(bathroomGroup.size.width * 0.35484 + 0.5) - floor(bathroomGroup.size.width * 0.32258 + 0.5), floor(bathroomGroup.size.height * 0.06897 + 0.5) - floor(bathroomGroup.size.height * 0.00000 + 0.5))];
                [UIColor.whiteColor setFill];
                [rectangle36Path fill];


                //// Rectangle 37 Drawing
                UIBezierPath* rectangle37Path = [UIBezierPath bezierPathWithRect: CGRectMake(CGRectGetMinX(bathroomGroup) + floor(bathroomGroup.size.width * 0.38710 + 0.5), CGRectGetMinY(bathroomGroup) + floor(bathroomGroup.size.height * 0.00000 + 0.5), floor(bathroomGroup.size.width * 0.41935 + 0.5) - floor(bathroomGroup.size.width * 0.38710 + 0.5), floor(bathroomGroup.size.height * 0.06897 + 0.5) - floor(bathroomGroup.size.height * 0.00000 + 0.5))];
                [UIColor.whiteColor setFill];
                [rectangle37Path fill];


                //// Rectangle 38 Drawing
                UIBezierPath* rectangle38Path = [UIBezierPath bezierPathWithRect: CGRectMake(CGRectGetMinX(bathroomGroup) + floor(bathroomGroup.size.width * 0.45161 + 0.5), CGRectGetMinY(bathroomGroup) + floor(bathroomGroup.size.height * 0.00000 + 0.5), floor(bathroomGroup.size.width * 0.48387 + 0.5) - floor(bathroomGroup.size.width * 0.45161 + 0.5), floor(bathroomGroup.size.height * 0.06897 + 0.5) - floor(bathroomGroup.size.height * 0.00000 + 0.5))];
                [UIColor.whiteColor setFill];
                [rectangle38Path fill];


                //// Rectangle 39 Drawing
                UIBezierPath* rectangle39Path = [UIBezierPath bezierPathWithRect: CGRectMake(CGRectGetMinX(bathroomGroup) + floor(bathroomGroup.size.width * 0.51613 + 0.5), CGRectGetMinY(bathroomGroup) + floor(bathroomGroup.size.height * 0.00000 + 0.5), floor(bathroomGroup.size.width * 0.54839 + 0.5) - floor(bathroomGroup.size.width * 0.51613 + 0.5), floor(bathroomGroup.size.height * 0.06897 + 0.5) - floor(bathroomGroup.size.height * 0.00000 + 0.5))];
                [UIColor.whiteColor setFill];
                [rectangle39Path fill];


                //// Rectangle 40 Drawing
                UIBezierPath* rectangle40Path = [UIBezierPath bezierPathWithRect: CGRectMake(CGRectGetMinX(bathroomGroup) + floor(bathroomGroup.size.width * 0.58065 + 0.5), CGRectGetMinY(bathroomGroup) + floor(bathroomGroup.size.height * 0.00000 + 0.5), floor(bathroomGroup.size.width * 0.61290 + 0.5) - floor(bathroomGroup.size.width * 0.58065 + 0.5), floor(bathroomGroup.size.height * 0.06897 + 0.5) - floor(bathroomGroup.size.height * 0.00000 + 0.5))];
                [UIColor.whiteColor setFill];
                [rectangle40Path fill];


                //// Rectangle 41 Drawing
                UIBezierPath* rectangle41Path = [UIBezierPath bezierPathWithRect: CGRectMake(CGRectGetMinX(bathroomGroup) + floor(bathroomGroup.size.width * 0.64516 + 0.5), CGRectGetMinY(bathroomGroup) + floor(bathroomGroup.size.height * 0.00000 + 0.5), floor(bathroomGroup.size.width * 0.67742 + 0.5) - floor(bathroomGroup.size.width * 0.64516 + 0.5), floor(bathroomGroup.size.height * 0.06897 + 0.5) - floor(bathroomGroup.size.height * 0.00000 + 0.5))];
                [UIColor.whiteColor setFill];
                [rectangle41Path fill];


                //// Rectangle 42 Drawing
                UIBezierPath* rectangle42Path = [UIBezierPath bezierPathWithRect: CGRectMake(CGRectGetMinX(bathroomGroup) + floor(bathroomGroup.size.width * 0.70968 + 0.5), CGRectGetMinY(bathroomGroup) + floor(bathroomGroup.size.height * 0.00000 + 0.5), floor(bathroomGroup.size.width * 0.74194 + 0.5) - floor(bathroomGroup.size.width * 0.70968 + 0.5), floor(bathroomGroup.size.height * 0.06897 + 0.5) - floor(bathroomGroup.size.height * 0.00000 + 0.5))];
                [UIColor.whiteColor setFill];
                [rectangle42Path fill];


                //// Rectangle 43 Drawing
                UIBezierPath* rectangle43Path = [UIBezierPath bezierPathWithRect: CGRectMake(CGRectGetMinX(bathroomGroup) + floor(bathroomGroup.size.width * 0.77419 + 0.5), CGRectGetMinY(bathroomGroup) + floor(bathroomGroup.size.height * 0.00000 + 0.5), floor(bathroomGroup.size.width * 0.80645 + 0.5) - floor(bathroomGroup.size.width * 0.77419 + 0.5), floor(bathroomGroup.size.height * 0.06897 + 0.5) - floor(bathroomGroup.size.height * 0.00000 + 0.5))];
                [UIColor.whiteColor setFill];
                [rectangle43Path fill];


                //// Rectangle 44 Drawing
                UIBezierPath* rectangle44Path = [UIBezierPath bezierPathWithRect: CGRectMake(CGRectGetMinX(bathroomGroup) + floor(bathroomGroup.size.width * 0.83871 + 0.5), CGRectGetMinY(bathroomGroup) + floor(bathroomGroup.size.height * 0.00000 + 0.5), floor(bathroomGroup.size.width * 0.87097 + 0.5) - floor(bathroomGroup.size.width * 0.83871 + 0.5), floor(bathroomGroup.size.height * 0.06897 + 0.5) - floor(bathroomGroup.size.height * 0.00000 + 0.5))];
                [UIColor.whiteColor setFill];
                [rectangle44Path fill];


                //// Rectangle 45 Drawing
                UIBezierPath* rectangle45Path = [UIBezierPath bezierPathWithRect: CGRectMake(CGRectGetMinX(bathroomGroup) + floor(bathroomGroup.size.width * 0.90323 + 0.5), CGRectGetMinY(bathroomGroup) + floor(bathroomGroup.size.height * 0.00000 + 0.5), floor(bathroomGroup.size.width * 0.93548 + 0.5) - floor(bathroomGroup.size.width * 0.90323 + 0.5), floor(bathroomGroup.size.height * 0.06897 + 0.5) - floor(bathroomGroup.size.height * 0.00000 + 0.5))];
                [UIColor.whiteColor setFill];
                [rectangle45Path fill];


                //// Rectangle 46 Drawing
                UIBezierPath* rectangle46Path = [UIBezierPath bezierPathWithRect: CGRectMake(CGRectGetMinX(bathroomGroup) + floor(bathroomGroup.size.width * 0.96774 + 0.5), CGRectGetMinY(bathroomGroup) + floor(bathroomGroup.size.height * 0.00000 + 0.5), floor(bathroomGroup.size.width * 1.00000 + 0.5) - floor(bathroomGroup.size.width * 0.96774 + 0.5), floor(bathroomGroup.size.height * 0.06897 + 0.5) - floor(bathroomGroup.size.height * 0.00000 + 0.5))];
                [UIColor.whiteColor setFill];
                [rectangle46Path fill];


                //// Rectangle 47 Drawing
                UIBezierPath* rectangle47Path = [UIBezierPath bezierPathWithRect: CGRectMake(CGRectGetMinX(bathroomGroup) + floor(bathroomGroup.size.width * 0.00000 + 0.5), CGRectGetMinY(bathroomGroup) + floor(bathroomGroup.size.height * 0.13793 + 0.5), floor(bathroomGroup.size.width * 0.03226 + 0.5) - floor(bathroomGroup.size.width * 0.00000 + 0.5), floor(bathroomGroup.size.height * 0.20690 + 0.5) - floor(bathroomGroup.size.height * 0.13793 + 0.5))];
                [UIColor.whiteColor setFill];
                [rectangle47Path fill];


                //// Rectangle 48 Drawing
                UIBezierPath* rectangle48Path = [UIBezierPath bezierPathWithRect: CGRectMake(CGRectGetMinX(bathroomGroup) + floor(bathroomGroup.size.width * 0.00000 + 0.5), CGRectGetMinY(bathroomGroup) + floor(bathroomGroup.size.height * 0.00000 + 0.5), floor(bathroomGroup.size.width * 0.03226 + 0.5) - floor(bathroomGroup.size.width * 0.00000 + 0.5), floor(bathroomGroup.size.height * 0.06897 + 0.5) - floor(bathroomGroup.size.height * 0.00000 + 0.5))];
                [UIColor.whiteColor setFill];
                [rectangle48Path fill];


                //// Bezier Drawing
                UIBezierPath* bezierPath = [UIBezierPath bezierPath];
                [bezierPath moveToPoint: CGPointMake(CGRectGetMinX(bathroomGroup) + 0.98387 * bathroomGroup.size.width, CGRectGetMinY(bathroomGroup) + 0.03448 * bathroomGroup.size.height)];
                [bezierPath addLineToPoint: CGPointMake(CGRectGetMinX(bathroomGroup) + 0.01613 * bathroomGroup.size.width, CGRectGetMinY(bathroomGroup) + 0.03448 * bathroomGroup.size.height)];
                [bezierPath addLineToPoint: CGPointMake(CGRectGetMinX(bathroomGroup) + 0.01613 * bathroomGroup.size.width, CGRectGetMinY(bathroomGroup) + 0.20690 * bathroomGroup.size.height)];
                [bezierPath addLineToPoint: CGPointMake(CGRectGetMinX(bathroomGroup) + 0.98387 * bathroomGroup.size.width, CGRectGetMinY(bathroomGroup) + 0.20690 * bathroomGroup.size.height)];
                [bezierPath addLineToPoint: CGPointMake(CGRectGetMinX(bathroomGroup) + 0.98387 * bathroomGroup.size.width, CGRectGetMinY(bathroomGroup) + 0.03448 * bathroomGroup.size.height)];
                [bezierPath closePath];
                [bezierPath moveToPoint: CGPointMake(CGRectGetMinX(bathroomGroup) + 1.00000 * bathroomGroup.size.width, CGRectGetMinY(bathroomGroup) + 0.03448 * bathroomGroup.size.height)];
                [bezierPath addLineToPoint: CGPointMake(CGRectGetMinX(bathroomGroup) + 1.00000 * bathroomGroup.size.width, CGRectGetMinY(bathroomGroup) + 0.20690 * bathroomGroup.size.height)];
                [bezierPath addLineToPoint: CGPointMake(CGRectGetMinX(bathroomGroup) + 1.00000 * bathroomGroup.size.width, CGRectGetMinY(bathroomGroup) + 0.24138 * bathroomGroup.size.height)];
                [bezierPath addLineToPoint: CGPointMake(CGRectGetMinX(bathroomGroup) + 0.00000 * bathroomGroup.size.width, CGRectGetMinY(bathroomGroup) + 0.24138 * bathroomGroup.size.height)];
                [bezierPath addLineToPoint: CGPointMake(CGRectGetMinX(bathroomGroup) + 0.00000 * bathroomGroup.size.width, CGRectGetMinY(bathroomGroup) + 0.20690 * bathroomGroup.size.height)];
                [bezierPath addLineToPoint: CGPointMake(CGRectGetMinX(bathroomGroup) + 0.00000 * bathroomGroup.size.width, CGRectGetMinY(bathroomGroup) + 0.03448 * bathroomGroup.size.height)];
                [bezierPath addLineToPoint: CGPointMake(CGRectGetMinX(bathroomGroup) + 0.00000 * bathroomGroup.size.width, CGRectGetMinY(bathroomGroup) + 0.00000 * bathroomGroup.size.height)];
                [bezierPath addLineToPoint: CGPointMake(CGRectGetMinX(bathroomGroup) + 1.00000 * bathroomGroup.size.width, CGRectGetMinY(bathroomGroup) + 0.00000 * bathroomGroup.size.height)];
                [bezierPath addLineToPoint: CGPointMake(CGRectGetMinX(bathroomGroup) + 1.00000 * bathroomGroup.size.width, CGRectGetMinY(bathroomGroup) + 0.03448 * bathroomGroup.size.height)];
                [bezierPath closePath];
                [UIColor.whiteColor setFill];
                [bezierPath fill];
            }


            CGContextEndTransparencyLayer(context);
            CGContextRestoreGState(context);
        }


        //// Bath Group
        {
            //// Bath Tub Drawing
            UIBezierPath* bathTubPath = [UIBezierPath bezierPath];
            [bathTubPath moveToPoint: CGPointMake(CGRectGetMinX(bathroomGroup) + 0.11290 * bathroomGroup.size.width, CGRectGetMinY(bathroomGroup) + 0.82759 * bathroomGroup.size.height)];
            [bathTubPath addCurveToPoint: CGPointMake(CGRectGetMinX(bathroomGroup) + 0.16129 * bathroomGroup.size.width, CGRectGetMinY(bathroomGroup) + 0.93103 * bathroomGroup.size.height) controlPoint1: CGPointMake(CGRectGetMinX(bathroomGroup) + 0.11290 * bathroomGroup.size.width, CGRectGetMinY(bathroomGroup) + 0.88472 * bathroomGroup.size.height) controlPoint2: CGPointMake(CGRectGetMinX(bathroomGroup) + 0.13457 * bathroomGroup.size.width, CGRectGetMinY(bathroomGroup) + 0.93103 * bathroomGroup.size.height)];
            [bathTubPath addLineToPoint: CGPointMake(CGRectGetMinX(bathroomGroup) + 0.51613 * bathroomGroup.size.width, CGRectGetMinY(bathroomGroup) + 0.93103 * bathroomGroup.size.height)];
            [bathTubPath addCurveToPoint: CGPointMake(CGRectGetMinX(bathroomGroup) + 0.56452 * bathroomGroup.size.width, CGRectGetMinY(bathroomGroup) + 0.82759 * bathroomGroup.size.height) controlPoint1: CGPointMake(CGRectGetMinX(bathroomGroup) + 0.54285 * bathroomGroup.size.width, CGRectGetMinY(bathroomGroup) + 0.93103 * bathroomGroup.size.height) controlPoint2: CGPointMake(CGRectGetMinX(bathroomGroup) + 0.56452 * bathroomGroup.size.width, CGRectGetMinY(bathroomGroup) + 0.88472 * bathroomGroup.size.height)];
            [bathTubPath addLineToPoint: CGPointMake(CGRectGetMinX(bathroomGroup) + 0.59677 * bathroomGroup.size.width, CGRectGetMinY(bathroomGroup) + 0.55172 * bathroomGroup.size.height)];
            [bathTubPath addLineToPoint: CGPointMake(CGRectGetMinX(bathroomGroup) + 0.08065 * bathroomGroup.size.width, CGRectGetMinY(bathroomGroup) + 0.55172 * bathroomGroup.size.height)];
            [bathTubPath addLineToPoint: CGPointMake(CGRectGetMinX(bathroomGroup) + 0.11290 * bathroomGroup.size.width, CGRectGetMinY(bathroomGroup) + 0.82759 * bathroomGroup.size.height)];
            [bathTubPath closePath];
            [UIColor.whiteColor setFill];
            [bathTubPath fill];

            ////// Bath Tub Inner Shadow
            CGContextSaveGState(context);
            CGContextClipToRect(context, bathTubPath.bounds);
            CGContextSetShadowWithColor(context, CGSizeZero, 0, NULL);

            CGContextSetAlpha(context, CGColorGetAlpha([highlightShadow.shadowColor CGColor]));
            CGContextBeginTransparencyLayer(context, NULL);
            {
                UIColor* opaqueShadow = [highlightShadow.shadowColor colorWithAlphaComponent: 1];
                CGContextSetShadowWithColor(context, highlightShadow.shadowOffset, highlightShadow.shadowBlurRadius, [opaqueShadow CGColor]);
                CGContextSetBlendMode(context, kCGBlendModeSourceOut);
                CGContextBeginTransparencyLayer(context, NULL);

                [opaqueShadow setFill];
                [bathTubPath fill];

                CGContextEndTransparencyLayer(context);
            }
            CGContextEndTransparencyLayer(context);
            CGContextRestoreGState(context);



            //// Bath Right Leg Drawing
            UIBezierPath* bathRightLegPath = [UIBezierPath bezierPath];
            [bathRightLegPath moveToPoint: CGPointMake(CGRectGetMinX(bathroomGroup) + 0.48387 * bathroomGroup.size.width, CGRectGetMinY(bathroomGroup) + 0.89655 * bathroomGroup.size.height)];
            [bathRightLegPath addLineToPoint: CGPointMake(CGRectGetMinX(bathroomGroup) + 0.51613 * bathroomGroup.size.width, CGRectGetMinY(bathroomGroup) + 0.89655 * bathroomGroup.size.height)];
            [bathRightLegPath addCurveToPoint: CGPointMake(CGRectGetMinX(bathroomGroup) + 0.54839 * bathroomGroup.size.width, CGRectGetMinY(bathroomGroup) + 1.00000 * bathroomGroup.size.height) controlPoint1: CGPointMake(CGRectGetMinX(bathroomGroup) + 0.51613 * bathroomGroup.size.width, CGRectGetMinY(bathroomGroup) + 0.89655 * bathroomGroup.size.height) controlPoint2: CGPointMake(CGRectGetMinX(bathroomGroup) + 0.51977 * bathroomGroup.size.width, CGRectGetMinY(bathroomGroup) + 0.94600 * bathroomGroup.size.height)];
            [bathRightLegPath addLineToPoint: CGPointMake(CGRectGetMinX(bathroomGroup) + 0.51613 * bathroomGroup.size.width, CGRectGetMinY(bathroomGroup) + 1.00000 * bathroomGroup.size.height)];
            [bathRightLegPath addCurveToPoint: CGPointMake(CGRectGetMinX(bathroomGroup) + 0.48387 * bathroomGroup.size.width, CGRectGetMinY(bathroomGroup) + 0.89655 * bathroomGroup.size.height) controlPoint1: CGPointMake(CGRectGetMinX(bathroomGroup) + 0.49588 * bathroomGroup.size.width, CGRectGetMinY(bathroomGroup) + 0.95385 * bathroomGroup.size.height) controlPoint2: CGPointMake(CGRectGetMinX(bathroomGroup) + 0.48387 * bathroomGroup.size.width, CGRectGetMinY(bathroomGroup) + 0.89655 * bathroomGroup.size.height)];
            [bathRightLegPath closePath];
            [UIColor.whiteColor setFill];
            [bathRightLegPath fill];


            //// Tap Drawing
            UIBezierPath* tapPath = [UIBezierPath bezierPath];
            [tapPath moveToPoint: CGPointMake(CGRectGetMinX(bathroomGroup) + 0.12903 * bathroomGroup.size.width, CGRectGetMinY(bathroomGroup) + 0.55172 * bathroomGroup.size.height)];
            [tapPath addLineToPoint: CGPointMake(CGRectGetMinX(bathroomGroup) + 0.12903 * bathroomGroup.size.width, CGRectGetMinY(bathroomGroup) + 0.37931 * bathroomGroup.size.height)];
            [tapPath addCurveToPoint: CGPointMake(CGRectGetMinX(bathroomGroup) + 0.16935 * bathroomGroup.size.width, CGRectGetMinY(bathroomGroup) + 0.27586 * bathroomGroup.size.height) controlPoint1: CGPointMake(CGRectGetMinX(bathroomGroup) + 0.12903 * bathroomGroup.size.width, CGRectGetMinY(bathroomGroup) + 0.37931 * bathroomGroup.size.height) controlPoint2: CGPointMake(CGRectGetMinX(bathroomGroup) + 0.13195 * bathroomGroup.size.width, CGRectGetMinY(bathroomGroup) + 0.27871 * bathroomGroup.size.height)];
            [tapPath addCurveToPoint: CGPointMake(CGRectGetMinX(bathroomGroup) + 0.20968 * bathroomGroup.size.width, CGRectGetMinY(bathroomGroup) + 0.37931 * bathroomGroup.size.height) controlPoint1: CGPointMake(CGRectGetMinX(bathroomGroup) + 0.20676 * bathroomGroup.size.width, CGRectGetMinY(bathroomGroup) + 0.27301 * bathroomGroup.size.height) controlPoint2: CGPointMake(CGRectGetMinX(bathroomGroup) + 0.20968 * bathroomGroup.size.width, CGRectGetMinY(bathroomGroup) + 0.37931 * bathroomGroup.size.height)];
            [tapPath addLineToPoint: CGPointMake(CGRectGetMinX(bathroomGroup) + 0.19355 * bathroomGroup.size.width, CGRectGetMinY(bathroomGroup) + 0.37931 * bathroomGroup.size.height)];
            [tapPath addCurveToPoint: CGPointMake(CGRectGetMinX(bathroomGroup) + 0.16935 * bathroomGroup.size.width, CGRectGetMinY(bathroomGroup) + 0.31034 * bathroomGroup.size.height) controlPoint1: CGPointMake(CGRectGetMinX(bathroomGroup) + 0.19355 * bathroomGroup.size.width, CGRectGetMinY(bathroomGroup) + 0.37931 * bathroomGroup.size.height) controlPoint2: CGPointMake(CGRectGetMinX(bathroomGroup) + 0.19194 * bathroomGroup.size.width, CGRectGetMinY(bathroomGroup) + 0.30982 * bathroomGroup.size.height)];
            [tapPath addCurveToPoint: CGPointMake(CGRectGetMinX(bathroomGroup) + 0.14516 * bathroomGroup.size.width, CGRectGetMinY(bathroomGroup) + 0.37931 * bathroomGroup.size.height) controlPoint1: CGPointMake(CGRectGetMinX(bathroomGroup) + 0.14677 * bathroomGroup.size.width, CGRectGetMinY(bathroomGroup) + 0.31087 * bathroomGroup.size.height) controlPoint2: CGPointMake(CGRectGetMinX(bathroomGroup) + 0.14516 * bathroomGroup.size.width, CGRectGetMinY(bathroomGroup) + 0.37931 * bathroomGroup.size.height)];
            [tapPath addLineToPoint: CGPointMake(CGRectGetMinX(bathroomGroup) + 0.14516 * bathroomGroup.size.width, CGRectGetMinY(bathroomGroup) + 0.55172 * bathroomGroup.size.height)];
            [tapPath addLineToPoint: CGPointMake(CGRectGetMinX(bathroomGroup) + 0.12903 * bathroomGroup.size.width, CGRectGetMinY(bathroomGroup) + 0.55172 * bathroomGroup.size.height)];
            [tapPath closePath];
            [UIColor.whiteColor setFill];
            [tapPath fill];


            //// Bath Left Leg Drawing
            UIBezierPath* bathLeftLegPath = [UIBezierPath bezierPath];
            [bathLeftLegPath moveToPoint: CGPointMake(CGRectGetMinX(bathroomGroup) + 0.19355 * bathroomGroup.size.width, CGRectGetMinY(bathroomGroup) + 0.89655 * bathroomGroup.size.height)];
            [bathLeftLegPath addLineToPoint: CGPointMake(CGRectGetMinX(bathroomGroup) + 0.16129 * bathroomGroup.size.width, CGRectGetMinY(bathroomGroup) + 0.89655 * bathroomGroup.size.height)];
            [bathLeftLegPath addCurveToPoint: CGPointMake(CGRectGetMinX(bathroomGroup) + 0.12903 * bathroomGroup.size.width, CGRectGetMinY(bathroomGroup) + 1.00000 * bathroomGroup.size.height) controlPoint1: CGPointMake(CGRectGetMinX(bathroomGroup) + 0.16129 * bathroomGroup.size.width, CGRectGetMinY(bathroomGroup) + 0.89655 * bathroomGroup.size.height) controlPoint2: CGPointMake(CGRectGetMinX(bathroomGroup) + 0.15765 * bathroomGroup.size.width, CGRectGetMinY(bathroomGroup) + 0.94600 * bathroomGroup.size.height)];
            [bathLeftLegPath addLineToPoint: CGPointMake(CGRectGetMinX(bathroomGroup) + 0.16129 * bathroomGroup.size.width, CGRectGetMinY(bathroomGroup) + 1.00000 * bathroomGroup.size.height)];
            [bathLeftLegPath addCurveToPoint: CGPointMake(CGRectGetMinX(bathroomGroup) + 0.19355 * bathroomGroup.size.width, CGRectGetMinY(bathroomGroup) + 0.89655 * bathroomGroup.size.height) controlPoint1: CGPointMake(CGRectGetMinX(bathroomGroup) + 0.18154 * bathroomGroup.size.width, CGRectGetMinY(bathroomGroup) + 0.95385 * bathroomGroup.size.height) controlPoint2: CGPointMake(CGRectGetMinX(bathroomGroup) + 0.19355 * bathroomGroup.size.width, CGRectGetMinY(bathroomGroup) + 0.89655 * bathroomGroup.size.height)];
            [bathLeftLegPath closePath];
            [UIColor.whiteColor setFill];
            [bathLeftLegPath fill];


            //// Bath Rim Drawing
            UIBezierPath* bathRimPath = [UIBezierPath bezierPath];
            [bathRimPath moveToPoint: CGPointMake(CGRectGetMinX(bathroomGroup) + 0.53830 * bathroomGroup.size.width, CGRectGetMinY(bathroomGroup) + 0.62278 * bathroomGroup.size.height)];
            [bathRimPath addCurveToPoint: CGPointMake(CGRectGetMinX(bathroomGroup) + 0.53830 * bathroomGroup.size.width, CGRectGetMinY(bathroomGroup) + 0.51515 * bathroomGroup.size.height) controlPoint1: CGPointMake(CGRectGetMinX(bathroomGroup) + 0.64852 * bathroomGroup.size.width, CGRectGetMinY(bathroomGroup) + 0.59306 * bathroomGroup.size.height) controlPoint2: CGPointMake(CGRectGetMinX(bathroomGroup) + 0.64852 * bathroomGroup.size.width, CGRectGetMinY(bathroomGroup) + 0.54487 * bathroomGroup.size.height)];
            [bathRimPath addLineToPoint: CGPointMake(CGRectGetMinX(bathroomGroup) + 0.13912 * bathroomGroup.size.width, CGRectGetMinY(bathroomGroup) + 0.51515 * bathroomGroup.size.height)];
            [bathRimPath addCurveToPoint: CGPointMake(CGRectGetMinX(bathroomGroup) + 0.13912 * bathroomGroup.size.width, CGRectGetMinY(bathroomGroup) + 0.62278 * bathroomGroup.size.height) controlPoint1: CGPointMake(CGRectGetMinX(bathroomGroup) + 0.02889 * bathroomGroup.size.width, CGRectGetMinY(bathroomGroup) + 0.54487 * bathroomGroup.size.height) controlPoint2: CGPointMake(CGRectGetMinX(bathroomGroup) + 0.02889 * bathroomGroup.size.width, CGRectGetMinY(bathroomGroup) + 0.59306 * bathroomGroup.size.height)];
            [bathRimPath addLineToPoint: CGPointMake(CGRectGetMinX(bathroomGroup) + 0.53830 * bathroomGroup.size.width, CGRectGetMinY(bathroomGroup) + 0.62278 * bathroomGroup.size.height)];
            [bathRimPath closePath];
            CGContextSaveGState(context);
            CGContextSetShadowWithColor(context, bottomThinShadow.shadowOffset, bottomThinShadow.shadowBlurRadius, [bottomThinShadow.shadowColor CGColor]);
            [UIColor.whiteColor setFill];
            [bathRimPath fill];
            CGContextRestoreGState(context);



            //// Bath Inside Drawing
            UIBezierPath* bathInsidePath = [UIBezierPath bezierPath];
            [bathInsidePath moveToPoint: CGPointMake(CGRectGetMinX(bathroomGroup) + 0.52689 * bathroomGroup.size.width, CGRectGetMinY(bathroomGroup) + 0.58830 * bathroomGroup.size.height)];
            [bathInsidePath addCurveToPoint: CGPointMake(CGRectGetMinX(bathroomGroup) + 0.52689 * bathroomGroup.size.width, CGRectGetMinY(bathroomGroup) + 0.54963 * bathroomGroup.size.height) controlPoint1: CGPointMake(CGRectGetMinX(bathroomGroup) + 0.63082 * bathroomGroup.size.width, CGRectGetMinY(bathroomGroup) + 0.57762 * bathroomGroup.size.height) controlPoint2: CGPointMake(CGRectGetMinX(bathroomGroup) + 0.63082 * bathroomGroup.size.width, CGRectGetMinY(bathroomGroup) + 0.56031 * bathroomGroup.size.height)];
            [bathInsidePath addLineToPoint: CGPointMake(CGRectGetMinX(bathroomGroup) + 0.15053 * bathroomGroup.size.width, CGRectGetMinY(bathroomGroup) + 0.54963 * bathroomGroup.size.height)];
            [bathInsidePath addCurveToPoint: CGPointMake(CGRectGetMinX(bathroomGroup) + 0.15053 * bathroomGroup.size.width, CGRectGetMinY(bathroomGroup) + 0.58830 * bathroomGroup.size.height) controlPoint1: CGPointMake(CGRectGetMinX(bathroomGroup) + 0.04660 * bathroomGroup.size.width, CGRectGetMinY(bathroomGroup) + 0.56031 * bathroomGroup.size.height) controlPoint2: CGPointMake(CGRectGetMinX(bathroomGroup) + 0.04660 * bathroomGroup.size.width, CGRectGetMinY(bathroomGroup) + 0.57762 * bathroomGroup.size.height)];
            [bathInsidePath addLineToPoint: CGPointMake(CGRectGetMinX(bathroomGroup) + 0.52689 * bathroomGroup.size.width, CGRectGetMinY(bathroomGroup) + 0.58830 * bathroomGroup.size.height)];
            [bathInsidePath closePath];
            [SampleStyleKit.baseLightColor setFill];
            [bathInsidePath fill];
        }


        //// Towel and Rail Group
        {
            //// Towel Rail Drawing
            UIBezierPath* towelRailPath = [UIBezierPath bezierPath];
            [towelRailPath moveToPoint: CGPointMake(CGRectGetMinX(bathroomGroup) + 0.66129 * bathroomGroup.size.width, CGRectGetMinY(bathroomGroup) + 0.34483 * bathroomGroup.size.height)];
            [towelRailPath addLineToPoint: CGPointMake(CGRectGetMinX(bathroomGroup) + 0.96774 * bathroomGroup.size.width, CGRectGetMinY(bathroomGroup) + 0.34483 * bathroomGroup.size.height)];
            [towelRailPath addLineToPoint: CGPointMake(CGRectGetMinX(bathroomGroup) + 0.96774 * bathroomGroup.size.width, CGRectGetMinY(bathroomGroup) + 0.31034 * bathroomGroup.size.height)];
            [towelRailPath addLineToPoint: CGPointMake(CGRectGetMinX(bathroomGroup) + 0.66129 * bathroomGroup.size.width, CGRectGetMinY(bathroomGroup) + 0.31034 * bathroomGroup.size.height)];
            [towelRailPath addLineToPoint: CGPointMake(CGRectGetMinX(bathroomGroup) + 0.66129 * bathroomGroup.size.width, CGRectGetMinY(bathroomGroup) + 0.34483 * bathroomGroup.size.height)];
            [towelRailPath closePath];
            CGContextSaveGState(context);
            CGContextSetShadowWithColor(context, bottomShadow.shadowOffset, bottomShadow.shadowBlurRadius, [bottomShadow.shadowColor CGColor]);
            [UIColor.whiteColor setFill];
            [towelRailPath fill];
            CGContextRestoreGState(context);



            //// Towel Group
            {
                CGContextSaveGState(context);
                CGContextSetShadowWithColor(context, bottomShadow.shadowOffset, bottomShadow.shadowBlurRadius, [bottomShadow.shadowColor CGColor]);
                CGContextBeginTransparencyLayer(context, NULL);


                //// Towel White Drawing
                UIBezierPath* towelWhitePath = [UIBezierPath bezierPathWithRect: CGRectMake(CGRectGetMinX(bathroomGroup) + floor(bathroomGroup.size.width * 0.70968 + 0.5), CGRectGetMinY(bathroomGroup) + floor(bathroomGroup.size.height * 0.27586 + 0.5), floor(bathroomGroup.size.width * 0.91935 + 0.5) - floor(bathroomGroup.size.width * 0.70968 + 0.5), floor(bathroomGroup.size.height * 0.82759 + 0.5) - floor(bathroomGroup.size.height * 0.27586 + 0.5))];
                [UIColor.whiteColor setFill];
                [towelWhitePath fill];


                //// Towel Stripe 1 Drawing
                UIBezierPath* towelStripe1Path = [UIBezierPath bezierPath];
                [towelStripe1Path moveToPoint: CGPointMake(CGRectGetMinX(bathroomGroup) + 0.72581 * bathroomGroup.size.width, CGRectGetMinY(bathroomGroup) + 0.27586 * bathroomGroup.size.height)];
                [towelStripe1Path addLineToPoint: CGPointMake(CGRectGetMinX(bathroomGroup) + 0.72581 * bathroomGroup.size.width, CGRectGetMinY(bathroomGroup) + 0.82759 * bathroomGroup.size.height)];
                [towelStripe1Path addLineToPoint: CGPointMake(CGRectGetMinX(bathroomGroup) + 0.74194 * bathroomGroup.size.width, CGRectGetMinY(bathroomGroup) + 0.82759 * bathroomGroup.size.height)];
                [towelStripe1Path addLineToPoint: CGPointMake(CGRectGetMinX(bathroomGroup) + 0.74194 * bathroomGroup.size.width, CGRectGetMinY(bathroomGroup) + 0.27586 * bathroomGroup.size.height)];
                [towelStripe1Path addLineToPoint: CGPointMake(CGRectGetMinX(bathroomGroup) + 0.72581 * bathroomGroup.size.width, CGRectGetMinY(bathroomGroup) + 0.27586 * bathroomGroup.size.height)];
                [towelStripe1Path closePath];
                [SampleStyleKit.baseLightColor setFill];
                [towelStripe1Path fill];


                //// Towel Stripe 2 Drawing
                UIBezierPath* towelStripe2Path = [UIBezierPath bezierPath];
                [towelStripe2Path moveToPoint: CGPointMake(CGRectGetMinX(bathroomGroup) + 0.75806 * bathroomGroup.size.width, CGRectGetMinY(bathroomGroup) + 0.27586 * bathroomGroup.size.height)];
                [towelStripe2Path addLineToPoint: CGPointMake(CGRectGetMinX(bathroomGroup) + 0.75806 * bathroomGroup.size.width, CGRectGetMinY(bathroomGroup) + 0.82759 * bathroomGroup.size.height)];
                [towelStripe2Path addLineToPoint: CGPointMake(CGRectGetMinX(bathroomGroup) + 0.77419 * bathroomGroup.size.width, CGRectGetMinY(bathroomGroup) + 0.82759 * bathroomGroup.size.height)];
                [towelStripe2Path addLineToPoint: CGPointMake(CGRectGetMinX(bathroomGroup) + 0.77419 * bathroomGroup.size.width, CGRectGetMinY(bathroomGroup) + 0.27586 * bathroomGroup.size.height)];
                [towelStripe2Path addLineToPoint: CGPointMake(CGRectGetMinX(bathroomGroup) + 0.75806 * bathroomGroup.size.width, CGRectGetMinY(bathroomGroup) + 0.27586 * bathroomGroup.size.height)];
                [towelStripe2Path closePath];
                [SampleStyleKit.baseLightColor setFill];
                [towelStripe2Path fill];


                //// Towel Stripe 3 Drawing
                UIBezierPath* towelStripe3Path = [UIBezierPath bezierPath];
                [towelStripe3Path moveToPoint: CGPointMake(CGRectGetMinX(bathroomGroup) + 0.79032 * bathroomGroup.size.width, CGRectGetMinY(bathroomGroup) + 0.27586 * bathroomGroup.size.height)];
                [towelStripe3Path addLineToPoint: CGPointMake(CGRectGetMinX(bathroomGroup) + 0.79032 * bathroomGroup.size.width, CGRectGetMinY(bathroomGroup) + 0.82759 * bathroomGroup.size.height)];
                [towelStripe3Path addLineToPoint: CGPointMake(CGRectGetMinX(bathroomGroup) + 0.80645 * bathroomGroup.size.width, CGRectGetMinY(bathroomGroup) + 0.82759 * bathroomGroup.size.height)];
                [towelStripe3Path addLineToPoint: CGPointMake(CGRectGetMinX(bathroomGroup) + 0.80645 * bathroomGroup.size.width, CGRectGetMinY(bathroomGroup) + 0.27586 * bathroomGroup.size.height)];
                [towelStripe3Path addLineToPoint: CGPointMake(CGRectGetMinX(bathroomGroup) + 0.79032 * bathroomGroup.size.width, CGRectGetMinY(bathroomGroup) + 0.27586 * bathroomGroup.size.height)];
                [towelStripe3Path closePath];
                [SampleStyleKit.baseLightColor setFill];
                [towelStripe3Path fill];


                //// Towel Stripe 4 Drawing
                UIBezierPath* towelStripe4Path = [UIBezierPath bezierPath];
                [towelStripe4Path moveToPoint: CGPointMake(CGRectGetMinX(bathroomGroup) + 0.82258 * bathroomGroup.size.width, CGRectGetMinY(bathroomGroup) + 0.27586 * bathroomGroup.size.height)];
                [towelStripe4Path addLineToPoint: CGPointMake(CGRectGetMinX(bathroomGroup) + 0.82258 * bathroomGroup.size.width, CGRectGetMinY(bathroomGroup) + 0.82759 * bathroomGroup.size.height)];
                [towelStripe4Path addLineToPoint: CGPointMake(CGRectGetMinX(bathroomGroup) + 0.83871 * bathroomGroup.size.width, CGRectGetMinY(bathroomGroup) + 0.82759 * bathroomGroup.size.height)];
                [towelStripe4Path addLineToPoint: CGPointMake(CGRectGetMinX(bathroomGroup) + 0.83871 * bathroomGroup.size.width, CGRectGetMinY(bathroomGroup) + 0.27586 * bathroomGroup.size.height)];
                [towelStripe4Path addLineToPoint: CGPointMake(CGRectGetMinX(bathroomGroup) + 0.82258 * bathroomGroup.size.width, CGRectGetMinY(bathroomGroup) + 0.27586 * bathroomGroup.size.height)];
                [towelStripe4Path closePath];
                [SampleStyleKit.baseLightColor setFill];
                [towelStripe4Path fill];


                //// Towel Stripe 5 Drawing
                UIBezierPath* towelStripe5Path = [UIBezierPath bezierPath];
                [towelStripe5Path moveToPoint: CGPointMake(CGRectGetMinX(bathroomGroup) + 0.85484 * bathroomGroup.size.width, CGRectGetMinY(bathroomGroup) + 0.27586 * bathroomGroup.size.height)];
                [towelStripe5Path addLineToPoint: CGPointMake(CGRectGetMinX(bathroomGroup) + 0.85484 * bathroomGroup.size.width, CGRectGetMinY(bathroomGroup) + 0.82759 * bathroomGroup.size.height)];
                [towelStripe5Path addLineToPoint: CGPointMake(CGRectGetMinX(bathroomGroup) + 0.87097 * bathroomGroup.size.width, CGRectGetMinY(bathroomGroup) + 0.82759 * bathroomGroup.size.height)];
                [towelStripe5Path addLineToPoint: CGPointMake(CGRectGetMinX(bathroomGroup) + 0.87097 * bathroomGroup.size.width, CGRectGetMinY(bathroomGroup) + 0.27586 * bathroomGroup.size.height)];
                [towelStripe5Path addLineToPoint: CGPointMake(CGRectGetMinX(bathroomGroup) + 0.85484 * bathroomGroup.size.width, CGRectGetMinY(bathroomGroup) + 0.27586 * bathroomGroup.size.height)];
                [towelStripe5Path closePath];
                [SampleStyleKit.baseLightColor setFill];
                [towelStripe5Path fill];


                //// Towel Stripe 6 Drawing
                UIBezierPath* towelStripe6Path = [UIBezierPath bezierPath];
                [towelStripe6Path moveToPoint: CGPointMake(CGRectGetMinX(bathroomGroup) + 0.88710 * bathroomGroup.size.width, CGRectGetMinY(bathroomGroup) + 0.27586 * bathroomGroup.size.height)];
                [towelStripe6Path addLineToPoint: CGPointMake(CGRectGetMinX(bathroomGroup) + 0.88710 * bathroomGroup.size.width, CGRectGetMinY(bathroomGroup) + 0.82759 * bathroomGroup.size.height)];
                [towelStripe6Path addLineToPoint: CGPointMake(CGRectGetMinX(bathroomGroup) + 0.90323 * bathroomGroup.size.width, CGRectGetMinY(bathroomGroup) + 0.82759 * bathroomGroup.size.height)];
                [towelStripe6Path addLineToPoint: CGPointMake(CGRectGetMinX(bathroomGroup) + 0.90323 * bathroomGroup.size.width, CGRectGetMinY(bathroomGroup) + 0.27586 * bathroomGroup.size.height)];
                [towelStripe6Path addLineToPoint: CGPointMake(CGRectGetMinX(bathroomGroup) + 0.88710 * bathroomGroup.size.width, CGRectGetMinY(bathroomGroup) + 0.27586 * bathroomGroup.size.height)];
                [towelStripe6Path closePath];
                [SampleStyleKit.baseLightColor setFill];
                [towelStripe6Path fill];


                CGContextEndTransparencyLayer(context);
                CGContextRestoreGState(context);
            }
        }
    }
}

+ (void)drawFrontDoor
{
    //// General Declarations
    CGContextRef context = UIGraphicsGetCurrentContext();

    //// Color Declarations
    CGFloat baseColorRGBA[4];
    [SampleStyleKit.baseColor getRed: &baseColorRGBA[0] green: &baseColorRGBA[1] blue: &baseColorRGBA[2] alpha: &baseColorRGBA[3]];

    UIColor* translucentBaseColor = [UIColor colorWithRed: (baseColorRGBA[0] * 0.5 + 0.5) green: (baseColorRGBA[1] * 0.5 + 0.5) blue: (baseColorRGBA[2] * 0.5 + 0.5) alpha: (baseColorRGBA[3] * 0.5 + 0.5)];
    CGFloat translucentBaseColorRGBA[4];
    [translucentBaseColor getRed: &translucentBaseColorRGBA[0] green: &translucentBaseColorRGBA[1] blue: &translucentBaseColorRGBA[2] alpha: &translucentBaseColorRGBA[3]];

    UIColor* bevelShadowColor = [UIColor colorWithRed: (translucentBaseColorRGBA[0] * 0.15 + 0.85) green: (translucentBaseColorRGBA[1] * 0.15 + 0.85) blue: (translucentBaseColorRGBA[2] * 0.15 + 0.85) alpha: (translucentBaseColorRGBA[3] * 0.15 + 0.85)];
    UIColor* baseLighterColor = [UIColor colorWithRed: (baseColorRGBA[0] * 0.2 + 0.8) green: (baseColorRGBA[1] * 0.2 + 0.8) blue: (baseColorRGBA[2] * 0.2 + 0.8) alpha: (baseColorRGBA[3] * 0.2 + 0.8)];
    UIColor* blackOpacity15 = [UIColor colorWithRed: 0 green: 0 blue: 0 alpha: 0.15];

    //// Shadow Declarations
    NSShadow* bottomThinShadow = [NSShadow shadowWithColor: SampleStyleKit.translucentBlack offset: CGSizeMake(0, 1) blurRadius: 2];
    NSShadow* bottomShadow = [NSShadow shadowWithColor: SampleStyleKit.translucentBlack offset: CGSizeMake(0, 2) blurRadius: 3];
    NSShadow* whiteBottom = [NSShadow shadowWithColor: UIColor.whiteColor offset: CGSizeMake(0, 2) blurRadius: 0];
    NSShadow* bevelShadow2 = [NSShadow shadowWithColor: bevelShadowColor offset: CGSizeMake(0, -2) blurRadius: 2];
    NSShadow* darkInner = [NSShadow shadowWithColor: blackOpacity15 offset: CGSizeMake(0, 1) blurRadius: 1];

    //// Frames
    CGRect frame = CGRectMake(48, 40, 32, 48);

    //// Subframes
    CGRect frontDoorGroup = CGRectMake(CGRectGetMinX(frame) + 2, CGRectGetMinY(frame) + 2, frame.size.width - 4, frame.size.height - 4);


    //// Front Door Frame Group
    {
        //// Front Door Group
        {
            CGContextSaveGState(context);
            CGContextSetShadowWithColor(context, bottomShadow.shadowOffset, bottomShadow.shadowBlurRadius, [bottomShadow.shadowColor CGColor]);
            CGContextBeginTransparencyLayer(context, NULL);


            //// Door Step Drawing
            UIBezierPath* doorStepPath = [UIBezierPath bezierPathWithRect: CGRectMake(CGRectGetMinX(frontDoorGroup) + floor(frontDoorGroup.size.width * 0.00000 + 0.5), CGRectGetMinY(frontDoorGroup) + floor(frontDoorGroup.size.height * 0.95455 + 0.5), floor(frontDoorGroup.size.width * 1.00000 + 0.5) - floor(frontDoorGroup.size.width * 0.00000 + 0.5), floor(frontDoorGroup.size.height * 1.00000 + 0.5) - floor(frontDoorGroup.size.height * 0.95455 + 0.5))];
            [baseLighterColor setFill];
            [doorStepPath fill];


            //// Door Panel Drawing
            UIBezierPath* doorPanelPath = [UIBezierPath bezierPathWithRect: CGRectMake(CGRectGetMinX(frontDoorGroup) + floor(frontDoorGroup.size.width * 0.07143 + 0.5), CGRectGetMinY(frontDoorGroup) + floor(frontDoorGroup.size.height * 0.00000 + 0.5), floor(frontDoorGroup.size.width * 0.92857 + 0.5) - floor(frontDoorGroup.size.width * 0.07143 + 0.5), floor(frontDoorGroup.size.height * 0.95455 + 0.5) - floor(frontDoorGroup.size.height * 0.00000 + 0.5))];
            [baseLighterColor setFill];
            [doorPanelPath fill];

            ////// Door Panel Inner Shadow
            CGContextSaveGState(context);
            CGContextClipToRect(context, doorPanelPath.bounds);
            CGContextSetShadowWithColor(context, CGSizeZero, 0, NULL);

            CGContextSetAlpha(context, CGColorGetAlpha([bevelShadow2.shadowColor CGColor]));
            CGContextBeginTransparencyLayer(context, NULL);
            {
                UIColor* opaqueShadow = [bevelShadow2.shadowColor colorWithAlphaComponent: 1];
                CGContextSetShadowWithColor(context, bevelShadow2.shadowOffset, bevelShadow2.shadowBlurRadius, [opaqueShadow CGColor]);
                CGContextSetBlendMode(context, kCGBlendModeSourceOut);
                CGContextBeginTransparencyLayer(context, NULL);

                [opaqueShadow setFill];
                [doorPanelPath fill];

                CGContextEndTransparencyLayer(context);
            }
            CGContextEndTransparencyLayer(context);
            CGContextRestoreGState(context);



            //// Door Top Panel Drawing
            UIBezierPath* doorTopPanelPath = [UIBezierPath bezierPathWithRect: CGRectMake(CGRectGetMinX(frontDoorGroup) + floor(frontDoorGroup.size.width * 0.25000 + 0.5), CGRectGetMinY(frontDoorGroup) + floor(frontDoorGroup.size.height * 0.09091 + 0.5), floor(frontDoorGroup.size.width * 0.78571 + 0.5) - floor(frontDoorGroup.size.width * 0.25000 + 0.5), floor(frontDoorGroup.size.height * 0.45455 + 0.5) - floor(frontDoorGroup.size.height * 0.09091 + 0.5))];
            CGContextSaveGState(context);
            CGContextSetShadowWithColor(context, whiteBottom.shadowOffset, whiteBottom.shadowBlurRadius, [whiteBottom.shadowColor CGColor]);
            [SampleStyleKit.baseLightColor setFill];
            [doorTopPanelPath fill];

            ////// Door Top Panel Inner Shadow
            CGContextSaveGState(context);
            CGContextClipToRect(context, doorTopPanelPath.bounds);
            CGContextSetShadowWithColor(context, CGSizeZero, 0, NULL);

            CGContextSetAlpha(context, CGColorGetAlpha([darkInner.shadowColor CGColor]));
            CGContextBeginTransparencyLayer(context, NULL);
            {
                UIColor* opaqueShadow = [darkInner.shadowColor colorWithAlphaComponent: 1];
                CGContextSetShadowWithColor(context, darkInner.shadowOffset, darkInner.shadowBlurRadius, [opaqueShadow CGColor]);
                CGContextSetBlendMode(context, kCGBlendModeSourceOut);
                CGContextBeginTransparencyLayer(context, NULL);

                [opaqueShadow setFill];
                [doorTopPanelPath fill];

                CGContextEndTransparencyLayer(context);
            }
            CGContextEndTransparencyLayer(context);
            CGContextRestoreGState(context);

            CGContextRestoreGState(context);



            //// Door Bottom Panel Drawing
            UIBezierPath* doorBottomPanelPath = [UIBezierPath bezierPathWithRect: CGRectMake(CGRectGetMinX(frontDoorGroup) + floor(frontDoorGroup.size.width * 0.25000 + 0.5), CGRectGetMinY(frontDoorGroup) + floor(frontDoorGroup.size.height * 0.52273 + 0.5), floor(frontDoorGroup.size.width * 0.78571 + 0.5) - floor(frontDoorGroup.size.width * 0.25000 + 0.5), floor(frontDoorGroup.size.height * 0.88636 + 0.5) - floor(frontDoorGroup.size.height * 0.52273 + 0.5))];
            CGContextSaveGState(context);
            CGContextSetShadowWithColor(context, whiteBottom.shadowOffset, whiteBottom.shadowBlurRadius, [whiteBottom.shadowColor CGColor]);
            [SampleStyleKit.baseLightColor setFill];
            [doorBottomPanelPath fill];

            ////// Door Bottom Panel Inner Shadow
            CGContextSaveGState(context);
            CGContextClipToRect(context, doorBottomPanelPath.bounds);
            CGContextSetShadowWithColor(context, CGSizeZero, 0, NULL);

            CGContextSetAlpha(context, CGColorGetAlpha([darkInner.shadowColor CGColor]));
            CGContextBeginTransparencyLayer(context, NULL);
            {
                UIColor* opaqueShadow = [darkInner.shadowColor colorWithAlphaComponent: 1];
                CGContextSetShadowWithColor(context, darkInner.shadowOffset, darkInner.shadowBlurRadius, [opaqueShadow CGColor]);
                CGContextSetBlendMode(context, kCGBlendModeSourceOut);
                CGContextBeginTransparencyLayer(context, NULL);

                [opaqueShadow setFill];
                [doorBottomPanelPath fill];

                CGContextEndTransparencyLayer(context);
            }
            CGContextEndTransparencyLayer(context);
            CGContextRestoreGState(context);

            CGContextRestoreGState(context);



            //// Door Knob Drawing
            UIBezierPath* doorKnobPath = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(CGRectGetMinX(frontDoorGroup) + floor(frontDoorGroup.size.width * 0.10714 + 0.5), CGRectGetMinY(frontDoorGroup) + floor(frontDoorGroup.size.height * 0.45455 + 0.5), floor(frontDoorGroup.size.width * 0.21429 + 0.5) - floor(frontDoorGroup.size.width * 0.10714 + 0.5), floor(frontDoorGroup.size.height * 0.52273 + 0.5) - floor(frontDoorGroup.size.height * 0.45455 + 0.5))];
            CGContextSaveGState(context);
            CGContextSetShadowWithColor(context, bottomThinShadow.shadowOffset, bottomThinShadow.shadowBlurRadius, [bottomThinShadow.shadowColor CGColor]);
            [UIColor.whiteColor setFill];
            [doorKnobPath fill];

            ////// Door Knob Inner Shadow
            CGContextSaveGState(context);
            CGContextClipToRect(context, doorKnobPath.bounds);
            CGContextSetShadowWithColor(context, CGSizeZero, 0, NULL);

            CGContextSetAlpha(context, CGColorGetAlpha([bevelShadow2.shadowColor CGColor]));
            CGContextBeginTransparencyLayer(context, NULL);
            {
                UIColor* opaqueShadow = [bevelShadow2.shadowColor colorWithAlphaComponent: 1];
                CGContextSetShadowWithColor(context, bevelShadow2.shadowOffset, bevelShadow2.shadowBlurRadius, [opaqueShadow CGColor]);
                CGContextSetBlendMode(context, kCGBlendModeSourceOut);
                CGContextBeginTransparencyLayer(context, NULL);

                [opaqueShadow setFill];
                [doorKnobPath fill];

                CGContextEndTransparencyLayer(context);
            }
            CGContextEndTransparencyLayer(context);
            CGContextRestoreGState(context);

            CGContextRestoreGState(context);



            CGContextEndTransparencyLayer(context);
            CGContextRestoreGState(context);
        }
    }
}

+ (void)drawButtonWithFrame: (CGRect)frame
{

    //// Rectangle Drawing
    UIBezierPath* rectanglePath = [UIBezierPath bezierPathWithRoundedRect: CGRectMake(CGRectGetMinX(frame) + floor(frame.size.width * 0.00000 + 0.5), CGRectGetMinY(frame) + floor(frame.size.height * 0.00000 + 0.5), floor(frame.size.width * 1.00000 + 0.5) - floor(frame.size.width * 0.00000 + 0.5), floor(frame.size.height * 1.00000 + 0.5) - floor(frame.size.height * 0.00000 + 0.5)) cornerRadius: 6];
    [SampleStyleKit.buttonColor setFill];
    [rectanglePath fill];
}

+ (void)drawButtonHighlightedWithFrame: (CGRect)frame
{

    //// Rectangle Drawing
    UIBezierPath* rectanglePath = [UIBezierPath bezierPathWithRoundedRect: CGRectMake(CGRectGetMinX(frame) + floor(frame.size.width * 0.00000 + 0.5), CGRectGetMinY(frame) + floor(frame.size.height * 0.00000 + 0.5), floor(frame.size.width * 1.00000 + 0.5) - floor(frame.size.width * 0.00000 + 0.5), floor(frame.size.height * 1.00000 + 0.5) - floor(frame.size.height * 0.00000 + 0.5)) cornerRadius: 6];
    [SampleStyleKit.buttonHighlightedColor setFill];
    [rectanglePath fill];
}

+ (void)drawIconPacManWithFrame: (CGRect)frame tintColor: (UIColor*)tintColor
{

    //// Oval Drawing
    CGRect ovalRect = CGRectMake(CGRectGetMinX(frame) + floor(frame.size.width * 0.00000 + 0.5), CGRectGetMinY(frame) + floor(frame.size.height * 0.00000 + 0.5), floor(frame.size.width * 1.00000 + 0.5) - floor(frame.size.width * 0.00000 + 0.5), floor(frame.size.height * 1.00000 + 0.5) - floor(frame.size.height * 0.00000 + 0.5));
    UIBezierPath* ovalPath = [UIBezierPath bezierPath];
    [ovalPath addArcWithCenter: CGPointMake(CGRectGetMidX(ovalRect), CGRectGetMidY(ovalRect)) radius: ovalRect.size.width / 2 startAngle: 24 * M_PI/180 endAngle: -24 * M_PI/180 clockwise: YES];
    [ovalPath addLineToPoint: CGPointMake(CGRectGetMidX(ovalRect), CGRectGetMidY(ovalRect))];
    [ovalPath closePath];

    [tintColor setFill];
    [ovalPath fill];
}

+ (void)drawIconGhostWithFrame: (CGRect)frame tintColor: (UIColor*)tintColor
{

    //// Bezier Drawing
    UIBezierPath* bezierPath = [UIBezierPath bezierPath];
    [bezierPath moveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.78125 * frame.size.width, CGRectGetMinY(frame) + 0.25000 * frame.size.height)];
    [bezierPath addLineToPoint: CGPointMake(CGRectGetMinX(frame) + 0.62500 * frame.size.width, CGRectGetMinY(frame) + 0.25000 * frame.size.height)];
    [bezierPath addLineToPoint: CGPointMake(CGRectGetMinX(frame) + 0.62500 * frame.size.width, CGRectGetMinY(frame) + 0.40625 * frame.size.height)];
    [bezierPath addLineToPoint: CGPointMake(CGRectGetMinX(frame) + 0.78125 * frame.size.width, CGRectGetMinY(frame) + 0.40625 * frame.size.height)];
    [bezierPath addLineToPoint: CGPointMake(CGRectGetMinX(frame) + 0.78125 * frame.size.width, CGRectGetMinY(frame) + 0.25000 * frame.size.height)];
    [bezierPath closePath];
    [bezierPath moveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.40625 * frame.size.width, CGRectGetMinY(frame) + 0.25000 * frame.size.height)];
    [bezierPath addLineToPoint: CGPointMake(CGRectGetMinX(frame) + 0.25000 * frame.size.width, CGRectGetMinY(frame) + 0.25000 * frame.size.height)];
    [bezierPath addLineToPoint: CGPointMake(CGRectGetMinX(frame) + 0.25000 * frame.size.width, CGRectGetMinY(frame) + 0.40625 * frame.size.height)];
    [bezierPath addLineToPoint: CGPointMake(CGRectGetMinX(frame) + 0.40625 * frame.size.width, CGRectGetMinY(frame) + 0.40625 * frame.size.height)];
    [bezierPath addLineToPoint: CGPointMake(CGRectGetMinX(frame) + 0.40625 * frame.size.width, CGRectGetMinY(frame) + 0.25000 * frame.size.height)];
    [bezierPath closePath];
    [bezierPath moveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.83282 * frame.size.width, CGRectGetMinY(frame) + 0.01023 * frame.size.height)];
    [bezierPath addLineToPoint: CGPointMake(CGRectGetMinX(frame) + 0.83883 * frame.size.width, CGRectGetMinY(frame) + 0.01170 * frame.size.height)];
    [bezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.92580 * frame.size.width, CGRectGetMinY(frame) + 0.09867 * frame.size.height) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 0.87925 * frame.size.width, CGRectGetMinY(frame) + 0.02642 * frame.size.height) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 0.91108 * frame.size.width, CGRectGetMinY(frame) + 0.05825 * frame.size.height)];
    [bezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.93750 * frame.size.width, CGRectGetMinY(frame) + 0.23885 * frame.size.height) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 0.93750 * frame.size.width, CGRectGetMinY(frame) + 0.13569 * frame.size.height) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 0.93750 * frame.size.width, CGRectGetMinY(frame) + 0.17008 * frame.size.height)];
    [bezierPath addLineToPoint: CGPointMake(CGRectGetMinX(frame) + 0.93750 * frame.size.width, CGRectGetMinY(frame) + 1.00000 * frame.size.height)];
    [bezierPath addLineToPoint: CGPointMake(CGRectGetMinX(frame) + 0.84375 * frame.size.width, CGRectGetMinY(frame) + 1.00000 * frame.size.height)];
    [bezierPath addLineToPoint: CGPointMake(CGRectGetMinX(frame) + 0.84375 * frame.size.width, CGRectGetMinY(frame) + 0.87500 * frame.size.height)];
    [bezierPath addLineToPoint: CGPointMake(CGRectGetMinX(frame) + 0.71875 * frame.size.width, CGRectGetMinY(frame) + 0.87500 * frame.size.height)];
    [bezierPath addLineToPoint: CGPointMake(CGRectGetMinX(frame) + 0.71875 * frame.size.width, CGRectGetMinY(frame) + 1.00000 * frame.size.height)];
    [bezierPath addLineToPoint: CGPointMake(CGRectGetMinX(frame) + 0.59375 * frame.size.width, CGRectGetMinY(frame) + 1.00000 * frame.size.height)];
    [bezierPath addLineToPoint: CGPointMake(CGRectGetMinX(frame) + 0.59375 * frame.size.width, CGRectGetMinY(frame) + 0.87500 * frame.size.height)];
    [bezierPath addLineToPoint: CGPointMake(CGRectGetMinX(frame) + 0.46875 * frame.size.width, CGRectGetMinY(frame) + 0.87500 * frame.size.height)];
    [bezierPath addLineToPoint: CGPointMake(CGRectGetMinX(frame) + 0.46875 * frame.size.width, CGRectGetMinY(frame) + 1.00000 * frame.size.height)];
    [bezierPath addLineToPoint: CGPointMake(CGRectGetMinX(frame) + 0.34375 * frame.size.width, CGRectGetMinY(frame) + 1.00000 * frame.size.height)];
    [bezierPath addLineToPoint: CGPointMake(CGRectGetMinX(frame) + 0.34375 * frame.size.width, CGRectGetMinY(frame) + 0.87500 * frame.size.height)];
    [bezierPath addLineToPoint: CGPointMake(CGRectGetMinX(frame) + 0.21875 * frame.size.width, CGRectGetMinY(frame) + 0.87500 * frame.size.height)];
    [bezierPath addLineToPoint: CGPointMake(CGRectGetMinX(frame) + 0.21875 * frame.size.width, CGRectGetMinY(frame) + 1.00000 * frame.size.height)];
    [bezierPath addLineToPoint: CGPointMake(CGRectGetMinX(frame) + 0.09375 * frame.size.width, CGRectGetMinY(frame) + 1.00000 * frame.size.height)];
    [bezierPath addLineToPoint: CGPointMake(CGRectGetMinX(frame) + 0.09375 * frame.size.width, CGRectGetMinY(frame) + 0.23885 * frame.size.height)];
    [bezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.10150 * frame.size.width, CGRectGetMinY(frame) + 0.11302 * frame.size.height) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 0.09375 * frame.size.width, CGRectGetMinY(frame) + 0.17617 * frame.size.height) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 0.09375 * frame.size.width, CGRectGetMinY(frame) + 0.14205 * frame.size.height)];
    [bezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.10398 * frame.size.width, CGRectGetMinY(frame) + 0.10468 * frame.size.height) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 0.10225 * frame.size.width, CGRectGetMinY(frame) + 0.11020 * frame.size.height) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 0.10308 * frame.size.width, CGRectGetMinY(frame) + 0.10742 * frame.size.height)];
    [bezierPath addLineToPoint: CGPointMake(CGRectGetMinX(frame) + 0.10545 * frame.size.width, CGRectGetMinY(frame) + 0.09867 * frame.size.height)];
    [bezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.19242 * frame.size.width, CGRectGetMinY(frame) + 0.01170 * frame.size.height) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 0.12017 * frame.size.width, CGRectGetMinY(frame) + 0.05825 * frame.size.height) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 0.15200 * frame.size.width, CGRectGetMinY(frame) + 0.02642 * frame.size.height)];
    [bezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.33260 * frame.size.width, CGRectGetMinY(frame) + 0.00000 * frame.size.height) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 0.22944 * frame.size.width, CGRectGetMinY(frame) + 0.00000 * frame.size.height) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 0.26383 * frame.size.width, CGRectGetMinY(frame) + 0.00000 * frame.size.height)];
    [bezierPath addLineToPoint: CGPointMake(CGRectGetMinX(frame) + 0.69865 * frame.size.width, CGRectGetMinY(frame) + 0.00000 * frame.size.height)];
    [bezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.83282 * frame.size.width, CGRectGetMinY(frame) + 0.01023 * frame.size.height) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 0.76742 * frame.size.width, CGRectGetMinY(frame) + 0.00000 * frame.size.height) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 0.80181 * frame.size.width, CGRectGetMinY(frame) + 0.00000 * frame.size.height)];
    [bezierPath closePath];
    [tintColor setFill];
    [bezierPath fill];
}

+ (void)drawScaleCircleWithFrame: (CGRect)frame animation: (CGFloat)animation
{
    //// General Declarations
    CGContextRef context = UIGraphicsGetCurrentContext();

    //// Oval Drawing
    CGContextSaveGState(context);
    CGContextTranslateCTM(context, CGRectGetMinX(frame) + 0.50000 * frame.size.width, CGRectGetMinY(frame) + 0.50000 * frame.size.height);
    CGContextScaleCTM(context, animation, animation);

    UIBezierPath* ovalPath = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(-48, -48, 96, 96)];
    [UIColor.greenColor setFill];
    [ovalPath fill];

    CGContextRestoreGState(context);
}

@end



@implementation NSShadow (PaintCodeAdditions)

- (instancetype)initWithColor: (UIColor*)color offset: (CGSize)offset blurRadius: (CGFloat)blurRadius
{
    self = [self init];
    if (self != nil)
    {
        self.shadowColor = color;
        self.shadowOffset = offset;
        self.shadowBlurRadius = blurRadius;
    }
    return self;
}

+ (instancetype)shadowWithColor: (UIColor*)color offset: (CGSize)offset blurRadius: (CGFloat)blurRadius
{
    return [[self alloc] initWithColor: color offset: offset blurRadius: blurRadius];
}

- (void)set
{
    CGContextSetShadowWithColor(UIGraphicsGetCurrentContext(), self.shadowOffset, self.shadowBlurRadius, [self.shadowColor CGColor]);
}

@end
